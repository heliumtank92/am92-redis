var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/RedisSdk.html",[0,0.502,1,0.833]],["body/classes/RedisSdk.html",[0,0.169,1,0.482,2,0.443,3,0.22,4,0.28,5,0.564,6,1.231,7,0.747,8,1.001,9,0.747,10,1.57,11,0.753,12,0.28,13,0.379,14,2.006,15,1.339,16,1.285,17,0.969,18,3.867,19,1.275,20,1.285,21,1.285,22,1.285,23,1.285,24,0.969,25,1.69,26,1.285,27,1.69,28,1.285,29,1.285,30,1.727,31,1.285,32,1.513,33,1.285,34,1.285,35,0.564,36,0.747,37,0.797,38,0.564,39,2.614,40,0.084,41,2.864,42,1.352,43,2.053,44,1.275,45,1.285,46,1.285,47,1.69,48,1.653,49,2.396,50,1.285,51,0.564,52,0.747,53,0.797,54,1.285,55,0.564,56,3.603,57,3.282,58,0.747,59,1.889,60,2.053,61,1.285,62,4.107,63,2.26,64,2.006,65,0.747,66,2.789,67,2.468,68,2.789,69,2.006,70,0.747,71,1.285,72,1.69,73,1.285,74,0.747,75,1.285,76,2.468,77,0.747,78,0.747,79,0.747,80,0.747,81,0.747,82,1.285,83,0.747,84,0.747,85,1.69,86,1.69,87,0.747,88,0.747,89,0.747,90,0.443,91,0.747,92,1.285,93,2.006,94,0.747,95,0.747,96,0.747,97,0.747,98,1.285,99,0.747,100,2.468,101,2.006,102,1.285,103,0.969,104,0.482,105,0.747,106,0.747,107,0.747,108,0.026,109,0.026]],["title/interfaces/RedisSdkConfig.html",[37,1.047,110,1.315]],["body/interfaces/RedisSdkConfig.html",[0,0.615,1,1.28,3,0.802,4,1.02,6,1.02,10,1.398,11,1.02,12,1.02,13,1.006,15,1.611,30,1.611,37,1.282,40,0.08,42,1.398,53,1.282,59,1.758,90,1.611,104,1.02,108,0.07,109,0.07,111,1.611,112,1.611,113,2.719,114,2.051,115,2.811,116,2.811,117,3.411,118,2.719,119,2.719,120,2.719]],["title/classes/RedisSdkError.html",[0,0.502,121,1.047]],["body/classes/RedisSdkError.html",[0,0.458,2,1.201,3,0.598,4,0.761,6,1.054,11,1.21,12,0.761,13,0.828,35,1.529,38,1.529,39,1.529,40,0.083,41,1.529,42,1.419,43,1.911,44,2.119,48,1.665,49,1.665,51,2.119,59,1.642,60,1.201,108,0.058,109,0.058,114,1.529,121,1.642,122,1.529,123,3.167,124,2.027,125,2.81,126,2.027,127,2.027,128,3.783,129,2.81,130,2.81,131,2.119,132,2.432,133,2.81,134,2.119,135,2.027,136,2.81,137,1.521,138,2.027,139,2.027,140,2.027,141,2.027,142,2.027,143,2.119,144,2.81,145,1.529,146,2.119,147,2.027,148,1.201,149,2.027,150,1.529,151,1.529,152,1.529]],["title/interfaces/RedisSdkErrorMap.html",[110,1.315,137,1.047]],["body/interfaces/RedisSdkErrorMap.html",[3,0.742,4,0.944,6,0.944,11,1.349,12,0.944,13,0.957,40,0.08,42,1.425,43,2.385,59,1.899,60,1.924,108,0.066,109,0.066,111,1.491,112,1.491,121,1.695,123,2.449,131,2.712,132,2.865,134,2.712,137,1.187,146,2.449,150,1.898,151,1.898,153,2.516,154,2.516,155,2.516,156,2.516,157,3.595]],["title/coverage.html",[158,2.254]],["body/coverage.html",[0,0.792,1,1.065,3,0.837,4,1.065,5,2.142,37,1.34,40,0.085,42,1.065,108,0.072,109,0.072,110,2.076,112,2.076,121,1.34,122,2.142,137,1.34,158,2.142,159,2.84,160,2.84,161,3.969,162,2.84,163,2.84,164,2.84,165,2.84,166,2.142,167,2.84,168,2.142]],["title/dependencies.html",[104,0.703,169,2.005]],["body/dependencies.html",[10,1.244,40,0.083,108,0.079,109,0.079,169,2.501,170,3.316]],["title/index.html",[12,0.703,171,1.413,172,1.413]],["body/index.html",[0,0.356,1,1.417,8,1.837,10,1.463,11,1.05,15,1.659,17,2.112,19,1.769,24,1.189,30,0.934,32,2.112,40,0.085,48,1.389,49,0.934,53,1.563,55,1.769,90,1.659,103,1.189,104,1.163,108,0.048,109,0.048,115,1.189,116,1.189,143,2.112,145,1.189,148,1.389,166,1.769,168,1.189,173,3.1,174,1.576,175,2.345,176,2.345,177,1.576,178,1.576,179,1.576,180,1.189,181,1.769,182,1.576,183,1.576,184,2.345,185,2.8,186,2.8,187,2.345,188,2.345,189,2.345,190,1.106,191,1.576,192,1.576,193,1.576,194,1.576,195,1.576,196,3.696,197,1.576,198,1.576,199,2.345,200,2.345,201,2.345,202,1.576,203,1.576,204,2.345,205,1.576,206,1.576,207,1.576,208,1.576,209,2.345,210,2.8,211,1.576,212,1.576,213,1.576,214,1.576,215,1.576,216,1.576,217,1.576,218,2.345,219,2.8,220,1.576,221,1.576,222,1.576,223,1.576,224,1.576,225,1.576,226,1.576,227,1.576,228,1.576,229,1.576,230,1.576,231,1.189,232,2.345,233,1.576,234,1.576,235,2.8,236,2.345,237,1.576,238,1.576,239,1.576,240,1.189,241,1.576,242,1.189,243,1.576,244,0.934]],["title/license.html",[171,1.413,172,1.413,190,0.884]],["body/license.html",[3,0.641,40,0.06,53,1.025,108,0.06,109,0.06,152,1.639,181,1.639,190,1.025,231,1.639,240,1.639,242,1.639,244,1.288,245,3.343,246,2.173,247,2.173,248,2.173,249,2.173,250,2.947,251,2.173,252,2.173,253,2.173,254,2.173,255,2.173,256,2.173,257,2.947,258,4.074,259,2.173,260,2.173,261,3.343,262,2.173,263,2.947,264,2.173,265,2.173,266,2.947,267,2.173,268,2.173,269,2.173,270,2.173,271,2.173,272,2.173,273,2.173,274,2.947,275,2.173,276,2.173,277,2.173,278,2.173,279,2.173,280,2.173,281,2.947,282,2.947,283,2.173,284,2.173,285,2.173,286,2.173,287,2.173,288,2.173,289,2.173,290,2.173,291,2.173,292,2.173,293,2.173,294,2.173,295,2.173,296,2.173,297,2.173,298,2.173,299,2.173,300,2.173,301,2.173,302,2.173,303,2.173,304,2.173,305,2.173,306,2.173,307,2.173,308,2.173,309,2.173,310,2.173,311,2.173]],["title/modules.html",[312,2.254]],["body/modules.html",[40,0.079,108,0.079,109,0.079,312,2.545]],["title/overview.html",[313,2.254]],["body/overview.html",[2,1.953,40,0.078,108,0.078,109,0.078,111,1.953,313,2.487,314,3.832]],["title/properties.html",[13,0.784,104,0.703]],["body/properties.html",[6,1.087,8,1.717,10,1.499,13,0.854,40,0.087,108,0.073,109,0.073,148,2.102,180,2.186,190,1.367,244,1.717,315,2.897,316,2.897,317,2.897,318,2.897,319,2.897,320,2.897,321,2.897,322,2.897,323,2.897,324,2.897,325,2.897]]],"invertedIndex":[["",{"_index":40,"title":{},"body":{"classes/RedisSdk.html":{},"interfaces/RedisSdkConfig.html":{},"classes/RedisSdkError.html":{},"interfaces/RedisSdkErrorMap.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0",{"_index":63,"title":{},"body":{"classes/RedisSdk.html":{}}}],["1",{"_index":83,"title":{},"body":{"classes/RedisSdk.html":{}}}],["100",{"_index":161,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":314,"title":{},"body":{"overview.html":{}}}],["2.0.1",{"_index":315,"title":{},"body":{"properties.html":{}}}],["2022",{"_index":247,"title":{},"body":{"license.html":{}}}],["22/22",{"_index":162,"title":{},"body":{"coverage.html":{}}}],["3/3",{"_index":164,"title":{},"body":{"coverage.html":{}}}],["4.6.4",{"_index":170,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":165,"title":{},"body":{"coverage.html":{}}}],["6379",{"_index":223,"title":{},"body":{"index.html":{}}}],["9/9",{"_index":163,"title":{},"body":{"coverage.html":{}}}],["_iscustomerror",{"_index":129,"title":{},"body":{"classes/RedisSdkError.html":{}}}],["_isredissdkerror",{"_index":130,"title":{},"body":{"classes/RedisSdkError.html":{}}}],["above",{"_index":280,"title":{},"body":{"license.html":{}}}],["account",{"_index":249,"title":{},"body":{"license.html":{}}}],["action",{"_index":305,"title":{},"body":{"license.html":{}}}],["agarwal",{"_index":243,"title":{},"body":{"index.html":{}}}],["am92/redis",{"_index":173,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":272,"title":{},"body":{"license.html":{}}}],["ankit",{"_index":240,"title":{},"body":{"index.html":{},"license.html":{}}}],["arising",{"_index":309,"title":{},"body":{"license.html":{}}}],["array",{"_index":72,"title":{},"body":{"classes/RedisSdk.html":{}}}],["associated",{"_index":152,"title":{},"body":{"classes/RedisSdkError.html":{},"license.html":{}}}],["async",{"_index":18,"title":{},"body":{"classes/RedisSdk.html":{}}}],["authors",{"_index":298,"title":{},"body":{"license.html":{}}}],["await",{"_index":235,"title":{},"body":{"index.html":{}}}],["before",{"_index":219,"title":{},"body":{"index.html":{}}}],["below",{"_index":234,"title":{},"body":{"index.html":{}}}],["better",{"_index":141,"title":{},"body":{"classes/RedisSdkError.html":{}}}],["boolean",{"_index":47,"title":{},"body":{"classes/RedisSdk.html":{}}}],["build",{"_index":214,"title":{},"body":{"index.html":{}}}],["c",{"_index":246,"title":{},"body":{"license.html":{}}}],["cache",{"_index":318,"title":{},"body":{"properties.html":{}}}],["call",{"_index":217,"title":{},"body":{"index.html":{}}}],["called",{"_index":232,"title":{},"body":{"index.html":{}}}],["case",{"_index":126,"title":{},"body":{"classes/RedisSdkError.html":{}}}],["charge",{"_index":254,"title":{},"body":{"license.html":{}}}],["checks",{"_index":81,"title":{},"body":{"classes/RedisSdk.html":{}}}],["claim",{"_index":301,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/RedisSdk.html":{},"classes/RedisSdkError.html":{}},"body":{"classes/RedisSdk.html":{},"interfaces/RedisSdkConfig.html":{},"classes/RedisSdkError.html":{},"coverage.html":{},"index.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/RedisSdk.html":{},"classes/RedisSdkError.html":{},"overview.html":{}}}],["client",{"_index":14,"title":{},"body":{"classes/RedisSdk.html":{}}}],["code",{"_index":146,"title":{},"body":{"classes/RedisSdkError.html":{},"interfaces/RedisSdkErrorMap.html":{}}}],["conditions",{"_index":279,"title":{},"body":{"license.html":{}}}],["config",{"_index":15,"title":{},"body":{"classes/RedisSdk.html":{},"interfaces/RedisSdkConfig.html":{},"index.html":{}}}],["config.key_prefix",{"_index":98,"title":{},"body":{"classes/RedisSdk.html":{}}}],["configuration",{"_index":118,"title":{},"body":{"interfaces/RedisSdkConfig.html":{}}}],["configured",{"_index":89,"title":{},"body":{"classes/RedisSdk.html":{}}}],["connect",{"_index":19,"title":{},"body":{"classes/RedisSdk.html":{},"index.html":{}}}],["connected",{"_index":16,"title":{},"body":{"classes/RedisSdk.html":{}}}],["connection",{"_index":53,"title":{},"body":{"classes/RedisSdk.html":{},"interfaces/RedisSdkConfig.html":{},"index.html":{},"license.html":{}}}],["connection_config",{"_index":115,"title":{},"body":{"interfaces/RedisSdkConfig.html":{},"index.html":{}}}],["connections",{"_index":229,"title":{},"body":{"index.html":{}}}],["const",{"_index":210,"title":{},"body":{"index.html":{}}}],["constructor",{"_index":35,"title":{},"body":{"classes/RedisSdk.html":{},"classes/RedisSdkError.html":{}}}],["constructor(config",{"_index":36,"title":{},"body":{"classes/RedisSdk.html":{}}}],["constructor(e",{"_index":135,"title":{},"body":{"classes/RedisSdkError.html":{}}}],["content",{"_index":183,"title":{},"body":{"index.html":{}}}],["contract",{"_index":306,"title":{},"body":{"license.html":{}}}],["contributors",{"_index":188,"title":{},"body":{"index.html":{}}}],["copies",{"_index":274,"title":{},"body":{"license.html":{}}}],["copy",{"_index":257,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":245,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":158,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":7,"title":{},"body":{"classes/RedisSdk.html":{}}}],["creates",{"_index":38,"title":{},"body":{"classes/RedisSdk.html":{},"classes/RedisSdkError.html":{}}}],["creating",{"_index":187,"title":{},"body":{"index.html":{}}}],["custom",{"_index":145,"title":{},"body":{"classes/RedisSdkError.html":{},"index.html":{}}}],["damages",{"_index":302,"title":{},"body":{"license.html":{}}}],["deal",{"_index":260,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":311,"title":{},"body":{"license.html":{}}}],["decrby",{"_index":20,"title":{},"body":{"classes/RedisSdk.html":{}}}],["decrby(key",{"_index":58,"title":{},"body":{"classes/RedisSdk.html":{}}}],["decrbyandexpire",{"_index":21,"title":{},"body":{"classes/RedisSdk.html":{}}}],["decrbyandexpire(key",{"_index":65,"title":{},"body":{"classes/RedisSdk.html":{}}}],["decremented",{"_index":64,"title":{},"body":{"classes/RedisSdk.html":{}}}],["decrements",{"_index":61,"title":{},"body":{"classes/RedisSdk.html":{}}}],["default",{"_index":48,"title":{},"body":{"classes/RedisSdk.html":{},"classes/RedisSdkError.html":{},"index.html":{}}}],["defination",{"_index":153,"title":{},"body":{"interfaces/RedisSdkErrorMap.html":{}}}],["defined",{"_index":119,"title":{},"body":{"interfaces/RedisSdkConfig.html":{}}}],["definition",{"_index":113,"title":{},"body":{"interfaces/RedisSdkConfig.html":{}}}],["del",{"_index":22,"title":{},"body":{"classes/RedisSdk.html":{}}}],["del(keys",{"_index":70,"title":{},"body":{"classes/RedisSdk.html":{}}}],["delbypattern",{"_index":23,"title":{},"body":{"classes/RedisSdk.html":{}}}],["delbypattern(pattern",{"_index":74,"title":{},"body":{"classes/RedisSdk.html":{}}}],["deletes",{"_index":71,"title":{},"body":{"classes/RedisSdk.html":{}}}],["dependencies",{"_index":169,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":6,"title":{},"body":{"classes/RedisSdk.html":{},"interfaces/RedisSdkConfig.html":{},"classes/RedisSdkError.html":{},"interfaces/RedisSdkErrorMap.html":{},"properties.html":{}}}],["disconnect",{"_index":24,"title":{},"body":{"classes/RedisSdk.html":{},"index.html":{}}}],["disconnect(forced",{"_index":77,"title":{},"body":{"classes/RedisSdk.html":{}}}],["distribute",{"_index":270,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":3,"title":{},"body":{"classes/RedisSdk.html":{},"interfaces/RedisSdkConfig.html":{},"classes/RedisSdkError.html":{},"interfaces/RedisSdkErrorMap.html":{},"coverage.html":{},"license.html":{}}}],["e",{"_index":138,"title":{},"body":{"classes/RedisSdkError.html":{}}}],["emap",{"_index":136,"title":{},"body":{"classes/RedisSdkError.html":{}}}],["environment",{"_index":185,"title":{},"body":{"index.html":{}}}],["error",{"_index":123,"title":{},"body":{"classes/RedisSdkError.html":{},"interfaces/RedisSdkErrorMap.html":{}}}],["error's",{"_index":147,"title":{},"body":{"classes/RedisSdkError.html":{}}}],["errorcode",{"_index":131,"title":{},"body":{"classes/RedisSdkError.html":{},"interfaces/RedisSdkErrorMap.html":{}}}],["establish",{"_index":55,"title":{},"body":{"classes/RedisSdk.html":{},"index.html":{}}}],["established",{"_index":54,"title":{},"body":{"classes/RedisSdk.html":{}}}],["event",{"_index":297,"title":{},"body":{"license.html":{}}}],["exist",{"_index":82,"title":{},"body":{"classes/RedisSdk.html":{}}}],["exists",{"_index":25,"title":{},"body":{"classes/RedisSdk.html":{}}}],["exists(keys",{"_index":80,"title":{},"body":{"classes/RedisSdk.html":{}}}],["expiry",{"_index":68,"title":{},"body":{"classes/RedisSdk.html":{}}}],["export",{"_index":196,"title":{},"body":{"index.html":{}}}],["express",{"_index":288,"title":{},"body":{"license.html":{}}}],["extends",{"_index":127,"title":{},"body":{"classes/RedisSdkError.html":{}}}],["false",{"_index":50,"title":{},"body":{"classes/RedisSdk.html":{}}}],["file",{"_index":4,"title":{},"body":{"classes/RedisSdk.html":{},"interfaces/RedisSdkConfig.html":{},"classes/RedisSdkError.html":{},"interfaces/RedisSdkErrorMap.html":{},"coverage.html":{}}}],["files",{"_index":259,"title":{},"body":{"license.html":{}}}],["fitness",{"_index":293,"title":{},"body":{"license.html":{}}}],["flag",{"_index":51,"title":{},"body":{"classes/RedisSdk.html":{},"classes/RedisSdkError.html":{}}}],["following",{"_index":181,"title":{},"body":{"index.html":{},"license.html":{}}}],["follows",{"_index":215,"title":{},"body":{"index.html":{}}}],["force",{"_index":238,"title":{},"body":{"index.html":{}}}],["forced",{"_index":79,"title":{},"body":{"classes/RedisSdk.html":{}}}],["free",{"_index":253,"title":{},"body":{"license.html":{}}}],["functionalities",{"_index":176,"title":{},"body":{"index.html":{}}}],["furnished",{"_index":277,"title":{},"body":{"license.html":{}}}],["gandhi",{"_index":241,"title":{},"body":{"index.html":{}}}],["get(key",{"_index":84,"title":{},"body":{"classes/RedisSdk.html":{}}}],["getandexpire",{"_index":26,"title":{},"body":{"classes/RedisSdk.html":{}}}],["getandexpire(key",{"_index":87,"title":{},"body":{"classes/RedisSdk.html":{}}}],["getclient",{"_index":27,"title":{},"body":{"classes/RedisSdk.html":{}}}],["gets",{"_index":85,"title":{},"body":{"classes/RedisSdk.html":{}}}],["getting",{"_index":171,"title":{"index.html":{},"license.html":{}},"body":{}}],["git@github.com:heliumtank92/am92",{"_index":324,"title":{},"body":{"properties.html":{}}}],["given",{"_index":75,"title":{},"body":{"classes/RedisSdk.html":{}}}],["granted",{"_index":252,"title":{},"body":{"license.html":{}}}],["helper",{"_index":182,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":251,"title":{},"body":{"license.html":{}}}],["holders",{"_index":299,"title":{},"body":{"license.html":{}}}],["homepage",{"_index":321,"title":{},"body":{"properties.html":{}}}],["host",{"_index":221,"title":{},"body":{"index.html":{}}}],["http",{"_index":150,"title":{},"body":{"classes/RedisSdkError.html":{},"interfaces/RedisSdkErrorMap.html":{}}}],["https://heliumtank92.github.io/am92",{"_index":322,"title":{},"body":{"properties.html":{}}}],["identifier",{"_index":159,"title":{},"body":{"coverage.html":{}}}],["identify",{"_index":144,"title":{},"body":{"classes/RedisSdkError.html":{}}}],["identifying",{"_index":52,"title":{},"body":{"classes/RedisSdk.html":{}}}],["implied",{"_index":289,"title":{},"body":{"license.html":{}}}],["import",{"_index":209,"title":{},"body":{"index.html":{}}}],["included",{"_index":283,"title":{},"body":{"license.html":{}}}],["including",{"_index":263,"title":{},"body":{"license.html":{}}}],["incrby",{"_index":28,"title":{},"body":{"classes/RedisSdk.html":{}}}],["incrby(key",{"_index":91,"title":{},"body":{"classes/RedisSdk.html":{}}}],["incrbyandexpire",{"_index":29,"title":{},"body":{"classes/RedisSdk.html":{}}}],["incrbyandexpire(key",{"_index":94,"title":{},"body":{"classes/RedisSdk.html":{}}}],["incremented",{"_index":93,"title":{},"body":{"classes/RedisSdk.html":{}}}],["increments",{"_index":92,"title":{},"body":{"classes/RedisSdk.html":{}}}],["index",{"_index":12,"title":{"index.html":{}},"body":{"classes/RedisSdk.html":{},"interfaces/RedisSdkConfig.html":{},"classes/RedisSdkError.html":{},"interfaces/RedisSdkErrorMap.html":{}}}],["install",{"_index":192,"title":{},"body":{"index.html":{}}}],["installation",{"_index":184,"title":{},"body":{"index.html":{}}}],["instance",{"_index":11,"title":{},"body":{"classes/RedisSdk.html":{},"interfaces/RedisSdkConfig.html":{},"classes/RedisSdkError.html":{},"interfaces/RedisSdkErrorMap.html":{},"index.html":{}}}],["instances",{"_index":230,"title":{},"body":{"index.html":{}}}],["interact",{"_index":177,"title":{},"body":{"index.html":{}}}],["interacts",{"_index":9,"title":{},"body":{"classes/RedisSdk.html":{}}}],["interface",{"_index":110,"title":{"interfaces/RedisSdkConfig.html":{},"interfaces/RedisSdkErrorMap.html":{}},"body":{"coverage.html":{}}}],["interfaces",{"_index":111,"title":{},"body":{"interfaces/RedisSdkConfig.html":{},"interfaces/RedisSdkErrorMap.html":{},"overview.html":{}}}],["javascript",{"_index":320,"title":{},"body":{"properties.html":{}}}],["js",{"_index":319,"title":{},"body":{"properties.html":{}}}],["key",{"_index":62,"title":{},"body":{"classes/RedisSdk.html":{}}}],["key_prefix",{"_index":116,"title":{},"body":{"interfaces/RedisSdkConfig.html":{},"index.html":{}}}],["keys",{"_index":30,"title":{},"body":{"classes/RedisSdk.html":{},"interfaces/RedisSdkConfig.html":{},"index.html":{}}}],["keys(pattern",{"_index":95,"title":{},"body":{"classes/RedisSdk.html":{}}}],["keywords",{"_index":316,"title":{},"body":{"properties.html":{}}}],["kind",{"_index":287,"title":{},"body":{"license.html":{}}}],["liability",{"_index":303,"title":{},"body":{"license.html":{}}}],["liable",{"_index":300,"title":{},"body":{"license.html":{}}}],["license",{"_index":190,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["limitation",{"_index":264,"title":{},"body":{"license.html":{}}}],["limited",{"_index":290,"title":{},"body":{"license.html":{}}}],["manage",{"_index":228,"title":{},"body":{"index.html":{}}}],["map",{"_index":154,"title":{},"body":{"interfaces/RedisSdkErrorMap.html":{}}}],["matching",{"_index":109,"title":{},"body":{"classes/RedisSdk.html":{},"interfaces/RedisSdkConfig.html":{},"classes/RedisSdkError.html":{},"interfaces/RedisSdkErrorMap.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["mehul",{"_index":242,"title":{},"body":{"index.html":{},"license.html":{}}}],["mentioned",{"_index":102,"title":{},"body":{"classes/RedisSdk.html":{}}}],["merchantability",{"_index":292,"title":{},"body":{"license.html":{}}}],["merge",{"_index":268,"title":{},"body":{"license.html":{}}}],["message",{"_index":132,"title":{},"body":{"classes/RedisSdkError.html":{},"interfaces/RedisSdkErrorMap.html":{}}}],["method",{"_index":103,"title":{},"body":{"classes/RedisSdk.html":{},"index.html":{}}}],["methods",{"_index":17,"title":{},"body":{"classes/RedisSdk.html":{},"index.html":{}}}],["mit",{"_index":244,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["modify",{"_index":267,"title":{},"body":{"license.html":{}}}],["module",{"_index":317,"title":{},"body":{"properties.html":{}}}],["modules",{"_index":312,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["name",{"_index":41,"title":{},"body":{"classes/RedisSdk.html":{},"classes/RedisSdkError.html":{}}}],["names",{"_index":73,"title":{},"body":{"classes/RedisSdk.html":{}}}],["need",{"_index":194,"title":{},"body":{"index.html":{}}}],["new",{"_index":166,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["node",{"_index":148,"title":{},"body":{"classes/RedisSdkError.html":{},"index.html":{},"properties.html":{}}}],["noninfringement",{"_index":296,"title":{},"body":{"license.html":{}}}],["note",{"_index":216,"title":{},"body":{"index.html":{}}}],["notice",{"_index":281,"title":{},"body":{"license.html":{}}}],["npm",{"_index":191,"title":{},"body":{"index.html":{}}}],["number",{"_index":60,"title":{},"body":{"classes/RedisSdk.html":{},"classes/RedisSdkError.html":{},"interfaces/RedisSdkErrorMap.html":{}}}],["object",{"_index":114,"title":{},"body":{"interfaces/RedisSdkConfig.html":{},"classes/RedisSdkError.html":{}}}],["obtaining",{"_index":256,"title":{},"body":{"license.html":{}}}],["optional",{"_index":43,"title":{},"body":{"classes/RedisSdk.html":{},"classes/RedisSdkError.html":{},"interfaces/RedisSdkErrorMap.html":{}}}],["options",{"_index":100,"title":{},"body":{"classes/RedisSdk.html":{}}}],["otherwise",{"_index":308,"title":{},"body":{"license.html":{}}}],["out",{"_index":310,"title":{},"body":{"license.html":{}}}],["overriding",{"_index":157,"title":{},"body":{"interfaces/RedisSdkErrorMap.html":{}}}],["overview",{"_index":313,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":104,"title":{"dependencies.html":{},"properties.html":{}},"body":{"classes/RedisSdk.html":{},"interfaces/RedisSdkConfig.html":{},"index.html":{}}}],["parameters",{"_index":39,"title":{},"body":{"classes/RedisSdk.html":{},"classes/RedisSdkError.html":{}}}],["particular",{"_index":294,"title":{},"body":{"license.html":{}}}],["pass",{"_index":213,"title":{},"body":{"index.html":{}}}],["passed",{"_index":155,"title":{},"body":{"interfaces/RedisSdkErrorMap.html":{}}}],["password",{"_index":225,"title":{},"body":{"index.html":{}}}],["pattern",{"_index":76,"title":{},"body":{"classes/RedisSdk.html":{}}}],["permission",{"_index":250,"title":{},"body":{"license.html":{}}}],["permit",{"_index":275,"title":{},"body":{"license.html":{}}}],["person",{"_index":255,"title":{},"body":{"license.html":{}}}],["persons",{"_index":276,"title":{},"body":{"license.html":{}}}],["port",{"_index":222,"title":{},"body":{"index.html":{}}}],["portions",{"_index":285,"title":{},"body":{"license.html":{}}}],["prefix",{"_index":120,"title":{},"body":{"interfaces/RedisSdkConfig.html":{}}}],["prefixes",{"_index":97,"title":{},"body":{"classes/RedisSdk.html":{}}}],["prefixkey",{"_index":31,"title":{},"body":{"classes/RedisSdk.html":{}}}],["prefixkey(key",{"_index":96,"title":{},"body":{"classes/RedisSdk.html":{}}}],["prepends",{"_index":207,"title":{},"body":{"index.html":{}}}],["project",{"_index":149,"title":{},"body":{"classes/RedisSdkError.html":{}}}],["promise",{"_index":57,"title":{},"body":{"classes/RedisSdk.html":{}}}],["properties",{"_index":13,"title":{"properties.html":{}},"body":{"classes/RedisSdk.html":{},"interfaces/RedisSdkConfig.html":{},"classes/RedisSdkError.html":{},"interfaces/RedisSdkErrorMap.html":{},"properties.html":{}}}],["provided",{"_index":231,"title":{},"body":{"index.html":{},"license.html":{}}}],["provides",{"_index":175,"title":{},"body":{"index.html":{}}}],["publish",{"_index":269,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":295,"title":{},"body":{"license.html":{}}}],["readonly",{"_index":128,"title":{},"body":{"classes/RedisSdkError.html":{}}}],["redis",{"_index":10,"title":{},"body":{"classes/RedisSdk.html":{},"interfaces/RedisSdkConfig.html":{},"dependencies.html":{},"index.html":{},"properties.html":{}}}],["redis.git",{"_index":325,"title":{},"body":{"properties.html":{}}}],["redis_auth'is",{"_index":206,"title":{},"body":{"index.html":{}}}],["redis_auth=note",{"_index":202,"title":{},"body":{"index.html":{}}}],["redis_auth_enabled",{"_index":205,"title":{},"body":{"index.html":{}}}],["redis_auth_enabled=false",{"_index":198,"title":{},"body":{"index.html":{}}}],["redis_enabled",{"_index":203,"title":{},"body":{"index.html":{}}}],["redis_enabled=false",{"_index":197,"title":{},"body":{"index.html":{}}}],["redis_host",{"_index":199,"title":{},"body":{"index.html":{}}}],["redis_key_prefix",{"_index":201,"title":{},"body":{"index.html":{}}}],["redis_port",{"_index":200,"title":{},"body":{"index.html":{}}}],["redisclient",{"_index":45,"title":{},"body":{"classes/RedisSdk.html":{}}}],["redisclientoptions",{"_index":117,"title":{},"body":{"interfaces/RedisSdkConfig.html":{}}}],["redissdk",{"_index":1,"title":{"classes/RedisSdk.html":{}},"body":{"classes/RedisSdk.html":{},"interfaces/RedisSdkConfig.html":{},"coverage.html":{},"index.html":{}}}],["redissdk(config",{"_index":226,"title":{},"body":{"index.html":{}}}],["redissdk.connect",{"_index":218,"title":{},"body":{"index.html":{}}}],["redissdk.disconnect",{"_index":237,"title":{},"body":{"index.html":{}}}],["redissdk.disconnect(true",{"_index":239,"title":{},"body":{"index.html":{}}}],["redissdkconfig",{"_index":37,"title":{"interfaces/RedisSdkConfig.html":{}},"body":{"classes/RedisSdk.html":{},"interfaces/RedisSdkConfig.html":{},"coverage.html":{}}}],["redissdkerror",{"_index":121,"title":{"classes/RedisSdkError.html":{}},"body":{"classes/RedisSdkError.html":{},"interfaces/RedisSdkErrorMap.html":{},"coverage.html":{}}}],["redissdkerrormap",{"_index":137,"title":{"interfaces/RedisSdkErrorMap.html":{}},"body":{"classes/RedisSdkError.html":{},"interfaces/RedisSdkErrorMap.html":{},"coverage.html":{}}}],["redissdkif",{"_index":211,"title":{},"body":{"index.html":{}}}],["redissdkto",{"_index":227,"title":{},"body":{"index.html":{}}}],["release",{"_index":236,"title":{},"body":{"index.html":{}}}],["releases",{"_index":78,"title":{},"body":{"classes/RedisSdk.html":{}}}],["repository",{"_index":323,"title":{},"body":{"properties.html":{}}}],["required",{"_index":204,"title":{},"body":{"index.html":{}}}],["resources",{"_index":189,"title":{},"body":{"index.html":{}}}],["restriction",{"_index":262,"title":{},"body":{"license.html":{}}}],["results",{"_index":108,"title":{},"body":{"classes/RedisSdk.html":{},"interfaces/RedisSdkConfig.html":{},"classes/RedisSdkError.html":{},"interfaces/RedisSdkErrorMap.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["returns",{"_index":56,"title":{},"body":{"classes/RedisSdk.html":{}}}],["rewrap",{"_index":140,"title":{},"body":{"classes/RedisSdkError.html":{}}}],["rights",{"_index":265,"title":{},"body":{"license.html":{}}}],["save",{"_index":193,"title":{},"body":{"index.html":{}}}],["sdk",{"_index":8,"title":{},"body":{"classes/RedisSdk.html":{},"index.html":{},"properties.html":{}}}],["seconds",{"_index":69,"title":{},"body":{"classes/RedisSdk.html":{}}}],["sell",{"_index":273,"title":{},"body":{"license.html":{}}}],["service",{"_index":133,"title":{},"body":{"classes/RedisSdkError.html":{}}}],["set",{"_index":32,"title":{},"body":{"classes/RedisSdk.html":{},"index.html":{}}}],["set(key",{"_index":99,"title":{},"body":{"classes/RedisSdk.html":{}}}],["setandexpire",{"_index":33,"title":{},"body":{"classes/RedisSdk.html":{}}}],["setandexpire(key",{"_index":105,"title":{},"body":{"classes/RedisSdk.html":{}}}],["setoptions",{"_index":101,"title":{},"body":{"classes/RedisSdk.html":{}}}],["sets",{"_index":67,"title":{},"body":{"classes/RedisSdk.html":{}}}],["shall",{"_index":282,"title":{},"body":{"license.html":{}}}],["shown",{"_index":233,"title":{},"body":{"index.html":{}}}],["socket",{"_index":220,"title":{},"body":{"index.html":{}}}],["software",{"_index":258,"title":{},"body":{"license.html":{}}}],["specified",{"_index":208,"title":{},"body":{"index.html":{}}}],["src/redissdk.ts",{"_index":5,"title":{},"body":{"classes/RedisSdk.html":{},"coverage.html":{}}}],["src/redissdkerror.ts",{"_index":122,"title":{},"body":{"classes/RedisSdkError.html":{},"coverage.html":{}}}],["src/types.ts",{"_index":112,"title":{},"body":{"interfaces/RedisSdkConfig.html":{},"interfaces/RedisSdkErrorMap.html":{},"coverage.html":{}}}],["started",{"_index":172,"title":{"index.html":{},"license.html":{}},"body":{}}],["statements",{"_index":160,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":151,"title":{},"body":{"classes/RedisSdkError.html":{},"interfaces/RedisSdkErrorMap.html":{}}}],["statuscode",{"_index":134,"title":{},"body":{"classes/RedisSdkError.html":{},"interfaces/RedisSdkErrorMap.html":{}}}],["stored",{"_index":86,"title":{},"body":{"classes/RedisSdk.html":{}}}],["string",{"_index":59,"title":{},"body":{"classes/RedisSdk.html":{},"interfaces/RedisSdkConfig.html":{},"classes/RedisSdkError.html":{},"interfaces/RedisSdkErrorMap.html":{}}}],["subject",{"_index":278,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":271,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":284,"title":{},"body":{"license.html":{}}}],["table",{"_index":168,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":167,"title":{},"body":{"coverage.html":{}}}],["team",{"_index":248,"title":{},"body":{"license.html":{}}}],["thrown",{"_index":125,"title":{},"body":{"classes/RedisSdkError.html":{}}}],["tls",{"_index":224,"title":{},"body":{"index.html":{}}}],["tort",{"_index":307,"title":{},"body":{"license.html":{}}}],["true",{"_index":143,"title":{},"body":{"classes/RedisSdkError.html":{},"index.html":{}}}],["ttlinsecs",{"_index":66,"title":{},"body":{"classes/RedisSdk.html":{}}}],["type",{"_index":42,"title":{},"body":{"classes/RedisSdk.html":{},"interfaces/RedisSdkConfig.html":{},"classes/RedisSdkError.html":{},"interfaces/RedisSdkErrorMap.html":{},"coverage.html":{}}}],["understanding",{"_index":142,"title":{},"body":{"classes/RedisSdkError.html":{}}}],["unknown",{"_index":88,"title":{},"body":{"classes/RedisSdk.html":{}}}],["unprefixes",{"_index":107,"title":{},"body":{"classes/RedisSdk.html":{}}}],["unprefixkey",{"_index":34,"title":{},"body":{"classes/RedisSdk.html":{}}}],["unprefixkey(key",{"_index":106,"title":{},"body":{"classes/RedisSdk.html":{}}}],["use",{"_index":266,"title":{},"body":{"license.html":{}}}],["used",{"_index":46,"title":{},"body":{"classes/RedisSdk.html":{}}}],["uses",{"_index":178,"title":{},"body":{"index.html":{}}}],["using",{"_index":90,"title":{},"body":{"classes/RedisSdk.html":{},"interfaces/RedisSdkConfig.html":{},"index.html":{}}}],["v4.x.x",{"_index":179,"title":{},"body":{"index.html":{}}}],["value",{"_index":49,"title":{},"body":{"classes/RedisSdk.html":{},"classes/RedisSdkError.html":{},"index.html":{}}}],["variables",{"_index":186,"title":{},"body":{"index.html":{}}}],["version",{"_index":180,"title":{},"body":{"index.html":{},"properties.html":{}}}],["warranties",{"_index":291,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":286,"title":{},"body":{"license.html":{}}}],["whether",{"_index":304,"title":{},"body":{"license.html":{}}}],["whose",{"_index":124,"title":{},"body":{"classes/RedisSdkError.html":{}}}],["wish",{"_index":212,"title":{},"body":{"index.html":{}}}],["without",{"_index":261,"title":{},"body":{"license.html":{}}}],["work",{"_index":195,"title":{},"body":{"index.html":{}}}],["wrap",{"_index":139,"title":{},"body":{"classes/RedisSdkError.html":{}}}],["wrapper",{"_index":174,"title":{},"body":{"index.html":{}}}],["xmlerror",{"_index":156,"title":{},"body":{"interfaces/RedisSdkErrorMap.html":{}}}],["yes",{"_index":44,"title":{},"body":{"classes/RedisSdk.html":{},"classes/RedisSdkError.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/RedisSdk.html":{"url":"classes/RedisSdk.html","title":"class - RedisSdk","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RedisSdk\n\n\n\n        \n            Documentation\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/RedisSdk.ts\n        \n\n\n            \n                Description\n            \n            \n                Class to create an SDK which interacts with a Redis Instance\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                client\n                            \n                            \n                                CONFIG\n                            \n                            \n                                connected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                connect\n                            \n                            \n                                    Async\n                                decrBy\n                            \n                            \n                                    Async\n                                decrByAndExpire\n                            \n                            \n                                    Async\n                                del\n                            \n                            \n                                    Async\n                                delByPattern\n                            \n                            \n                                    Async\n                                disconnect\n                            \n                            \n                                    Async\n                                exists\n                            \n                            \n                                    Async\n                                get\n                            \n                            \n                                    Async\n                                getAndExpire\n                            \n                            \n                                getClient\n                            \n                            \n                                    Async\n                                incrBy\n                            \n                            \n                                    Async\n                                incrByAndExpire\n                            \n                            \n                                    Async\n                                keys\n                            \n                            \n                                prefixKey\n                            \n                            \n                                    Async\n                                set\n                            \n                            \n                                    Async\n                                setAndExpire\n                            \n                            \n                                unprefixKey\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config?: RedisSdkConfig)\n                    \n                \n\n                \n                    \n                            Creates an instance of RedisSdk.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        RedisSdkConfig\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        client\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RedisClient\n\n                    \n                \n\n            \n                \n                    Redis Client used by the SDK\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RedisSdkConfig\n\n                    \n                \n\n            \n                \n                    Redis Config used by the SDK\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        connected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n\n            \n                \n                    Flag identifying if the connection has been established or not\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        connect\n                        \n                    \n                \n            \n            \n                \n                    \n                    connect()\n                \n            \n\n\n\n\n            \n                \n                    Establish a connection with the Redis Instance\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        decrBy\n                        \n                    \n                \n            \n            \n                \n                    \n                    decrBy(key: string, value: number)\n                \n            \n\n\n\n\n            \n                \n                    Decrements the value of a Redis key\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Redis key name\n\n                                    \n                                \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0\n                                    \n\n                                    \n                                        Redis value to be decremented by\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Decremented Redis value\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        decrByAndExpire\n                        \n                    \n                \n            \n            \n                \n                    \n                    decrByAndExpire(key: string, value: number, ttlInSecs: number)\n                \n            \n\n\n\n\n            \n                \n                    Decrements the value of a Redis key and sets the expiry of Redis key\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Redis key name\n\n                                    \n                                \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0\n                                    \n\n                                    \n                                        Redis value to be decremented by\n\n                                    \n                                \n                                \n                                    ttlInSecs\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Redis key expiry in seconds\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Decremented Redis value\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        del\n                        \n                    \n                \n            \n            \n                \n                    \n                    del(keys: string | string[])\n                \n            \n\n\n\n\n            \n                \n                    Deletes a Redis key or keys\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    keys\n                                    \n                                            string | string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Redis key name or Array of Redis key names\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delByPattern\n                        \n                    \n                \n            \n            \n                \n                    \n                    delByPattern(pattern: string)\n                \n            \n\n\n\n\n            \n                \n                    Deletes all Redis keys for a given key pattern\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    pattern\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Redis key pattern\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        disconnect\n                        \n                    \n                \n            \n            \n                \n                    \n                    disconnect(forced: boolean)\n                \n            \n\n\n\n\n            \n                \n                    Releases the connection with the Redis Instance if established\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    forced\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        exists\n                        \n                    \n                \n            \n            \n                \n                    \n                    exists(keys: string[])\n                \n            \n\n\n\n\n            \n                \n                    Checks if Redis keys exist or not\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    keys\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Array of Redis key names\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Returns '0' if key does not exist and '1' if exists\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        get\n                        \n                    \n                \n            \n            \n                \n                    \n                    get(key: string)\n                \n            \n\n\n\n\n            \n                \n                    Gets the value of a Redis key\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Redis key name\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Value stored in Redis\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAndExpire\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAndExpire(key: string, ttlInSecs: number)\n                \n            \n\n\n\n\n            \n                \n                    Gets the value of a Redis key and sets the expiry of Redis key\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Redis key name\n\n                                    \n                                \n                                \n                                    ttlInSecs\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Redis key expiry in seconds\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getClient\n                        \n                    \n                \n            \n            \n                \ngetClient()\n                \n            \n\n\n\n\n            \n                \n                    Returns the Redis client as configured using CONFIG\n\n\n                    \n                    \n                    \n                        Returns :     RedisClient\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        incrBy\n                        \n                    \n                \n            \n            \n                \n                    \n                    incrBy(key: string, value: number)\n                \n            \n\n\n\n\n            \n                \n                    Increments the value of a Redis key\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Redis key name\n\n                                    \n                                \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0\n                                    \n\n                                    \n                                        Redis value to be incremented by\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Incremented Redis value\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        incrByAndExpire\n                        \n                    \n                \n            \n            \n                \n                    \n                    incrByAndExpire(key: string, value: number, ttlInSecs: number)\n                \n            \n\n\n\n\n            \n                \n                    Increments the value of a Redis key and sets the expiry of Redis key\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Redis key name\n\n                                    \n                                \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0\n                                    \n\n                                    \n                                        Redis value to be incremented by\n\n                                    \n                                \n                                \n                                    ttlInSecs\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Redis key expiry in seconds\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Incremented Redis value\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        keys\n                        \n                    \n                \n            \n            \n                \n                    \n                    keys(pattern: string)\n                \n            \n\n\n\n\n            \n                \n                    Gets all Redis keys for a given key pattern\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    pattern\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Redis key pattern\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Array of Redis keys\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prefixKey\n                        \n                    \n                \n            \n            \n                \nprefixKey(key: string)\n                \n            \n\n\n\n\n            \n                \n                    Prefixes the Redis key with CONFIG.KEY_PREFIX\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        set\n                        \n                    \n                \n            \n            \n                \n                    \n                    set(key: string, value: string, options?: SetOptions)\n                \n            \n\n\n\n\n            \n                \n                    Sets the value for a Redis key\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Redis key name\n\n                                    \n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Value to be stored in Redis\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                            SetOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Options as mentioned by 'set' method of Redis package\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        setAndExpire\n                        \n                    \n                \n            \n            \n                \n                    \n                    setAndExpire(key: string, value: string, ttlInSecs: number, options?: SetOptions)\n                \n            \n\n\n\n\n            \n                \n                    Sets the value of a Redis key and sets the expiry of Redis key\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Redis key name\n\n                                    \n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Value to be stored in Redis\n\n                                    \n                                \n                                \n                                    ttlInSecs\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Redis key expiry in seconds\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                            SetOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Options as mentioned by 'set' method of Redis package\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unprefixKey\n                        \n                    \n                \n            \n            \n                \nunprefixKey(key: string)\n                \n            \n\n\n\n\n            \n                \n                    Unprefixes the Redis key with CONFIG.KEY_PREFIX\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RedisSdkConfig.html":{"url":"interfaces/RedisSdkConfig.html","title":"interface - RedisSdkConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RedisSdkConfig\n\n\n\n        \n            Documentation\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/TYPES.ts\n        \n\n\n            \n                Description\n            \n            \n                Type definition of config object for RedisSdk Class\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            CONNECTION_CONFIG\n                                        \n                                \n                                \n                                        \n                                            KEY_PREFIX\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        CONNECTION_CONFIG\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CONNECTION_CONFIG:     RedisClientOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RedisClientOptions\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Redis Connection Configuration as defined in 'redis' package\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        KEY_PREFIX\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        KEY_PREFIX:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    String to prefix all Redis keys when using the RedisSdk instance\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RedisSdkError.html":{"url":"classes/RedisSdkError.html","title":"class - RedisSdkError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RedisSdkError\n\n\n\n        \n            Documentation\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/RedisSdkError.ts\n        \n\n\n            \n                Description\n            \n            \n                Error class whose instance is thrown in case of any error.\n\n            \n\n            \n                Extends\n            \n            \n                    Error\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                _isCustomError\n                            \n                            \n                                    Readonly\n                                _isRedisSdkError\n                            \n                            \n                                    Optional\n                                error\n                            \n                            \n                                errorCode\n                            \n                            \n                                message\n                            \n                            \n                                    Readonly\n                                service\n                            \n                            \n                                statusCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(e?: any, eMap?: RedisSdkErrorMap)\n                    \n                \n\n                \n                    \n                            Creates an instance of RedisSdkError.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                Any Error instance to wrap with RedisSdkError.\n\n                                                        \n                                                \n                                                \n                                                        eMap\n                                                  \n                                                        \n                                                                        RedisSdkErrorMap\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                RedisSdkErrorMap to rewrap error for better understanding.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        _isCustomError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n\n            \n                \n                    Flag to identify if error is a custom error.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        _isRedisSdkError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n\n            \n                \n                    Flag to identify if error is a RedisSdkError.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n            \n                \n                    Error object.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n            \n                \n                    Error Code.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n            \n                \n                    Error's message string.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        service\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n            \n                \n                    Node project from which Error is thrown.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n            \n                \n                    HTTP status code associated with the error.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RedisSdkErrorMap.html":{"url":"interfaces/RedisSdkErrorMap.html","title":"interface - RedisSdkErrorMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RedisSdkErrorMap\n\n\n\n        \n            Documentation\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/TYPES.ts\n        \n\n\n            \n                Description\n            \n            \n                Type defination for error map to be passed to XmlError.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            errorCode\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            message\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            statusCode\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errorCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Overriding error code string for RedisSdkError instance\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Overriding message string for RedisSdkError instance\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        statusCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Overriding HTTP status code for RedisSdkError instance\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/RedisSdk.ts\n            \n            class\n            RedisSdk\n            \n                100 %\n                (22/22)\n            \n        \n        \n            \n                \n                src/RedisSdkError.ts\n            \n            class\n            RedisSdkError\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/TYPES.ts\n            \n            interface\n            RedisSdkConfig\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/TYPES.ts\n            \n            interface\n            RedisSdkErrorMap\n            \n                100 %\n                (4/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            redis : ^4.6.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n@am92/redis\n \n \n \n \n\n\n\n\nThis is an SDK Wrapper which provides Redis functionalities to interact with a Redis Instance. This package uses Node-Redis package using its v4.x.x version.\nThis package provides the following functionalities:\n\nRedis Connection Helper\nRedis SDK Class\n\n\n\nTable of Content\n\nInstallation\nEnvironment Variables\nCreating a Redis SDK Instance\nContributors\nResources\nLicense\n\n\n\nInstallation\n$ npm install --save @am92/redis\n\nEnvironment Variables\nThe following environment variables need to be set to work with this package:\n##### Redis Config\nexport REDIS_ENABLED=false\nexport REDIS_AUTH_ENABLED=false\nexport REDIS_HOST=\nexport REDIS_PORT=\nexport REDIS_KEY_PREFIX=\nexport REDIS_AUTH=Note:\n\nIf 'REDIS_ENABLED' is set to 'true', 'REDIS_HOST' and 'REDIS_PORT' are required\nIf 'REDIS_AUTH_ENABLED' is set to 'true', 'REDIS_AUTH'is required\n'REDIS_KEY_PREFIX' prepends all redis keys with the specified value\n\n\n\nCreating a Redis SDK Instance\nimport RedisSdk from '@am92/redis'\n\nconst redisSdk = new RedisSdk()\nexport default redisSdkIf you wish to pass your custom 'config' for the RedisSdk, then you can build it as follows:\nNote: You will have to call the redisSdk.connect() to establish a connection before using the RedisSdk Methods\nimport RedisSdk from '@am92/redis'\n\nconst config = {\n  CONNECTION_CONFIG: {\n    socket: {\n      host: '',\n      port: 6379,\n      tls: true\n    },\n    password: ''\n  }\n  KEY_PREFIX: ''\n}\n\nconst redisSdk = new RedisSdk(config)\nexport default redisSdkTo manage redis connections for RedisSdk Instances, 'connect' and 'disconnect' methods are provided and they can be called as shown below. The 'connect' method must be called before before using the RedisSdk Methods.\n// To establish a connection\nawait redisSdk.connect()\n\n// To release the connection\nawait redisSdk.disconnect()\n\n// To force release the connection\nawait redisSdk.disconnect(true)\n\nContributors\n\n  \n    \n      \n        \n          \n          \n          Ankit Gandhi\n        \n      \n      \n        \n          \n          \n          Mehul Agarwal\n        \n      \n    \n  \n\n\n\n\nResources\n\nNode-Redis\n\n\n\nLicense\n\nMIT\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2022 Ankit Mehul Team Account\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 2.0.1\n        \n            Description : Redis SDK\n        \n            Keywords : redis, node, module, cache, js, javascript, node-redis\n        \n            Homepage : https://heliumtank92.github.io/am92-redis\n        \n            License : MIT\n        \n            Repository : git@github.com:heliumtank92/am92-redis.git\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
