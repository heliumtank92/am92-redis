var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/RedisSdk.html",[0,0.502,1,0.833]],["body/classes/RedisSdk.html",[0,0.169,1,0.483,2,0.444,3,0.221,4,0.281,5,0.565,6,1.232,7,0.749,8,1.003,9,0.749,10,1.571,11,0.754,12,0.281,13,0.38,14,2.009,15,1.341,16,1.287,17,0.971,18,3.869,19,1.277,20,1.287,21,1.287,22,1.287,23,1.287,24,0.971,25,1.693,26,1.287,27,1.693,28,1.287,29,1.287,30,1.729,31,1.287,32,1.516,33,1.287,34,1.287,35,0.565,36,0.749,37,0.799,38,0.565,39,2.616,40,0.084,41,2.866,42,1.353,43,2.055,44,1.277,45,1.287,46,1.287,47,1.693,48,1.655,49,2.397,50,1.287,51,0.565,52,0.749,53,0.799,54,1.287,55,0.565,56,3.606,57,3.284,58,0.749,59,1.89,60,2.055,61,1.287,62,4.109,63,2.263,64,2.009,65,0.749,66,2.792,67,2.471,68,2.792,69,2.009,70,0.749,71,1.287,72,1.693,73,1.287,74,0.749,75,1.287,76,2.471,77,0.749,78,0.749,79,0.749,80,0.749,81,0.749,82,1.287,83,0.749,84,0.749,85,1.693,86,1.693,87,0.749,88,0.749,89,0.749,90,0.444,91,0.749,92,1.287,93,2.009,94,0.749,95,0.749,96,0.749,97,0.749,98,1.287,99,0.749,100,2.471,101,2.009,102,1.287,103,0.971,104,0.483,105,0.749,106,0.749,107,0.749,108,0.026,109,0.026]],["title/interfaces/RedisSdkConfig.html",[37,1.047,110,1.315]],["body/interfaces/RedisSdkConfig.html",[0,0.615,1,1.28,3,0.802,4,1.021,6,1.021,10,1.399,11,1.021,12,1.021,13,1.006,15,1.612,30,1.612,37,1.283,40,0.08,42,1.399,53,1.283,59,1.758,90,1.612,104,1.021,108,0.07,109,0.07,111,1.612,112,1.612,113,2.721,114,2.052,115,2.812,116,2.812,117,3.412,118,2.721,119,2.721,120,2.721]],["title/classes/RedisSdkError.html",[0,0.502,121,1.047]],["body/classes/RedisSdkError.html",[0,0.459,2,1.203,3,0.599,4,0.762,6,1.055,11,1.211,12,0.762,13,0.829,35,1.531,38,1.531,39,1.531,40,0.083,41,1.531,42,1.42,43,1.912,44,2.121,48,1.666,49,1.666,51,2.121,59,1.643,60,1.203,108,0.058,109,0.058,114,1.531,121,1.643,122,1.531,123,3.167,124,2.03,125,2.812,126,2.03,127,2.03,128,3.784,129,2.812,130,2.812,131,2.121,132,2.434,133,2.812,134,2.121,135,2.03,136,2.812,137,1.522,138,2.03,139,2.03,140,2.03,141,2.03,142,2.03,143,2.121,144,2.812,145,1.531,146,2.121,147,2.03,148,1.203,149,2.03,150,1.531,151,1.531,152,1.531]],["title/interfaces/RedisSdkErrorMap.html",[110,1.315,137,1.047]],["body/interfaces/RedisSdkErrorMap.html",[3,0.743,4,0.945,6,0.945,11,1.349,12,0.945,13,0.958,40,0.08,42,1.425,43,2.386,59,1.899,60,1.925,108,0.066,109,0.066,111,1.492,112,1.492,121,1.696,123,2.451,131,2.713,132,2.866,134,2.713,137,1.188,146,2.451,150,1.9,151,1.9,153,2.519,154,2.519,155,2.519,156,2.519,157,3.596]],["title/coverage.html",[158,2.254]],["body/coverage.html",[0,0.792,1,1.066,3,0.838,4,1.066,5,2.144,37,1.34,40,0.085,42,1.066,108,0.072,109,0.072,110,2.077,112,2.077,121,1.34,122,2.144,137,1.34,158,2.144,159,2.842,160,2.842,161,3.97,162,2.842,163,2.842,164,2.842,165,2.842,166,2.144,167,2.842,168,2.144]],["title/dependencies.html",[104,0.703,169,2.005]],["body/dependencies.html",[10,1.244,40,0.083,108,0.079,109,0.079,169,2.502,170,3.316]],["title/index.html",[12,0.703,171,1.413,172,1.413]],["body/index.html",[0,0.353,1,1.413,8,1.829,10,1.46,11,1.045,15,1.65,17,2.1,19,1.757,24,1.178,30,0.926,32,2.1,40,0.086,48,1.38,49,0.926,53,1.557,55,1.757,90,1.65,103,1.178,104,1.158,108,0.048,109,0.048,115,1.178,116,1.178,143,2.1,145,1.178,148,1.38,166,1.757,168,1.178,173,3.086,174,1.562,175,2.329,176,2.329,177,1.562,178,1.562,179,1.562,180,1.178,181,1.757,182,1.562,183,1.562,184,2.329,185,2.785,186,2.785,187,2.329,188,2.329,189,2.329,190,1.098,191,1.562,192,1.562,193,1.562,194,1.562,195,1.562,196,3.686,197,1.562,198,1.562,199,2.329,200,2.329,201,2.329,202,1.562,203,1.562,204,2.329,205,1.562,206,1.562,207,1.562,208,1.562,209,2.329,210,2.785,211,1.562,212,1.562,213,1.562,214,1.562,215,1.562,216,1.562,217,1.562,218,2.329,219,2.785,220,1.562,221,1.562,222,1.562,223,1.562,224,1.562,225,1.562,226,1.562,227,1.562,228,1.562,229,1.562,230,1.562,231,1.178,232,2.329,233,1.562,234,1.562,235,2.785,236,2.329,237,1.562,238,1.562,239,1.562,240,1.178,241,1.562,242,1.178,243,1.562,244,0.926]],["title/license.html",[171,1.413,172,1.413,190,0.884]],["body/license.html",[3,0.642,40,0.06,53,1.026,108,0.06,109,0.06,152,1.641,181,1.641,190,1.026,231,1.641,240,1.641,242,1.641,244,1.289,245,3.345,246,2.176,247,2.176,248,2.176,249,2.176,250,2.949,251,2.176,252,2.176,253,2.176,254,2.176,255,2.176,256,2.176,257,2.949,258,4.076,259,2.176,260,2.176,261,3.345,262,2.176,263,2.949,264,2.176,265,2.176,266,2.949,267,2.176,268,2.176,269,2.176,270,2.176,271,2.176,272,2.176,273,2.176,274,2.949,275,2.176,276,2.176,277,2.176,278,2.176,279,2.176,280,2.176,281,2.949,282,2.949,283,2.176,284,2.176,285,2.176,286,2.176,287,2.176,288,2.176,289,2.176,290,2.176,291,2.176,292,2.176,293,2.176,294,2.176,295,2.176,296,2.176,297,2.176,298,2.176,299,2.176,300,2.176,301,2.176,302,2.176,303,2.176,304,2.176,305,2.176,306,2.176,307,2.176,308,2.176,309,2.176,310,2.176,311,2.176]],["title/modules.html",[312,2.254]],["body/modules.html",[40,0.079,108,0.079,109,0.079,312,2.546]],["title/overview.html",[313,2.254]],["body/overview.html",[2,1.954,40,0.078,108,0.078,109,0.078,111,1.954,313,2.487,314,3.832]],["title/properties.html",[13,0.784,104,0.703]],["body/properties.html",[6,1.088,8,1.718,10,1.5,13,0.855,40,0.087,108,0.073,109,0.073,148,2.103,180,2.187,190,1.367,244,1.718,315,2.899,316,2.899,317,2.899,318,2.899,319,2.899,320,2.899,321,2.899,322,2.899,323,2.899,324,2.899,325,2.899]]],"invertedIndex":[["",{"_index":40,"title":{},"body":{"classes/RedisSdk.html":{},"interfaces/RedisSdkConfig.html":{},"classes/RedisSdkError.html":{},"interfaces/RedisSdkErrorMap.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0",{"_index":63,"title":{},"body":{"classes/RedisSdk.html":{}}}],["1",{"_index":83,"title":{},"body":{"classes/RedisSdk.html":{}}}],["100",{"_index":161,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":314,"title":{},"body":{"overview.html":{}}}],["2.0.2",{"_index":315,"title":{},"body":{"properties.html":{}}}],["2022",{"_index":247,"title":{},"body":{"license.html":{}}}],["22/22",{"_index":162,"title":{},"body":{"coverage.html":{}}}],["3/3",{"_index":164,"title":{},"body":{"coverage.html":{}}}],["4.6.4",{"_index":170,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":165,"title":{},"body":{"coverage.html":{}}}],["6379",{"_index":223,"title":{},"body":{"index.html":{}}}],["9/9",{"_index":163,"title":{},"body":{"coverage.html":{}}}],["_iscustomerror",{"_index":129,"title":{},"body":{"classes/RedisSdkError.html":{}}}],["_isredissdkerror",{"_index":130,"title":{},"body":{"classes/RedisSdkError.html":{}}}],["above",{"_index":280,"title":{},"body":{"license.html":{}}}],["account",{"_index":249,"title":{},"body":{"license.html":{}}}],["action",{"_index":305,"title":{},"body":{"license.html":{}}}],["agarwal",{"_index":243,"title":{},"body":{"index.html":{}}}],["am92/redis",{"_index":173,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":272,"title":{},"body":{"license.html":{}}}],["ankit",{"_index":240,"title":{},"body":{"index.html":{},"license.html":{}}}],["arising",{"_index":309,"title":{},"body":{"license.html":{}}}],["array",{"_index":72,"title":{},"body":{"classes/RedisSdk.html":{}}}],["associated",{"_index":152,"title":{},"body":{"classes/RedisSdkError.html":{},"license.html":{}}}],["async",{"_index":18,"title":{},"body":{"classes/RedisSdk.html":{}}}],["authors",{"_index":298,"title":{},"body":{"license.html":{}}}],["await",{"_index":235,"title":{},"body":{"index.html":{}}}],["before",{"_index":219,"title":{},"body":{"index.html":{}}}],["below",{"_index":234,"title":{},"body":{"index.html":{}}}],["better",{"_index":141,"title":{},"body":{"classes/RedisSdkError.html":{}}}],["boolean",{"_index":47,"title":{},"body":{"classes/RedisSdk.html":{}}}],["build",{"_index":214,"title":{},"body":{"index.html":{}}}],["c",{"_index":246,"title":{},"body":{"license.html":{}}}],["cache",{"_index":318,"title":{},"body":{"properties.html":{}}}],["call",{"_index":217,"title":{},"body":{"index.html":{}}}],["called",{"_index":232,"title":{},"body":{"index.html":{}}}],["case",{"_index":126,"title":{},"body":{"classes/RedisSdkError.html":{}}}],["charge",{"_index":254,"title":{},"body":{"license.html":{}}}],["checks",{"_index":81,"title":{},"body":{"classes/RedisSdk.html":{}}}],["claim",{"_index":301,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/RedisSdk.html":{},"classes/RedisSdkError.html":{}},"body":{"classes/RedisSdk.html":{},"interfaces/RedisSdkConfig.html":{},"classes/RedisSdkError.html":{},"coverage.html":{},"index.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/RedisSdk.html":{},"classes/RedisSdkError.html":{},"overview.html":{}}}],["client",{"_index":14,"title":{},"body":{"classes/RedisSdk.html":{}}}],["code",{"_index":146,"title":{},"body":{"classes/RedisSdkError.html":{},"interfaces/RedisSdkErrorMap.html":{}}}],["conditions",{"_index":279,"title":{},"body":{"license.html":{}}}],["config",{"_index":15,"title":{},"body":{"classes/RedisSdk.html":{},"interfaces/RedisSdkConfig.html":{},"index.html":{}}}],["config.key_prefix",{"_index":98,"title":{},"body":{"classes/RedisSdk.html":{}}}],["configuration",{"_index":118,"title":{},"body":{"interfaces/RedisSdkConfig.html":{}}}],["configured",{"_index":89,"title":{},"body":{"classes/RedisSdk.html":{}}}],["connect",{"_index":19,"title":{},"body":{"classes/RedisSdk.html":{},"index.html":{}}}],["connected",{"_index":16,"title":{},"body":{"classes/RedisSdk.html":{}}}],["connection",{"_index":53,"title":{},"body":{"classes/RedisSdk.html":{},"interfaces/RedisSdkConfig.html":{},"index.html":{},"license.html":{}}}],["connection_config",{"_index":115,"title":{},"body":{"interfaces/RedisSdkConfig.html":{},"index.html":{}}}],["connections",{"_index":229,"title":{},"body":{"index.html":{}}}],["const",{"_index":210,"title":{},"body":{"index.html":{}}}],["constructor",{"_index":35,"title":{},"body":{"classes/RedisSdk.html":{},"classes/RedisSdkError.html":{}}}],["constructor(config",{"_index":36,"title":{},"body":{"classes/RedisSdk.html":{}}}],["constructor(e",{"_index":135,"title":{},"body":{"classes/RedisSdkError.html":{}}}],["content",{"_index":183,"title":{},"body":{"index.html":{}}}],["contract",{"_index":306,"title":{},"body":{"license.html":{}}}],["contributors",{"_index":188,"title":{},"body":{"index.html":{}}}],["copies",{"_index":274,"title":{},"body":{"license.html":{}}}],["copy",{"_index":257,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":245,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":158,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":7,"title":{},"body":{"classes/RedisSdk.html":{}}}],["creates",{"_index":38,"title":{},"body":{"classes/RedisSdk.html":{},"classes/RedisSdkError.html":{}}}],["creating",{"_index":187,"title":{},"body":{"index.html":{}}}],["custom",{"_index":145,"title":{},"body":{"classes/RedisSdkError.html":{},"index.html":{}}}],["damages",{"_index":302,"title":{},"body":{"license.html":{}}}],["deal",{"_index":260,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":311,"title":{},"body":{"license.html":{}}}],["decrby",{"_index":20,"title":{},"body":{"classes/RedisSdk.html":{}}}],["decrby(key",{"_index":58,"title":{},"body":{"classes/RedisSdk.html":{}}}],["decrbyandexpire",{"_index":21,"title":{},"body":{"classes/RedisSdk.html":{}}}],["decrbyandexpire(key",{"_index":65,"title":{},"body":{"classes/RedisSdk.html":{}}}],["decremented",{"_index":64,"title":{},"body":{"classes/RedisSdk.html":{}}}],["decrements",{"_index":61,"title":{},"body":{"classes/RedisSdk.html":{}}}],["default",{"_index":48,"title":{},"body":{"classes/RedisSdk.html":{},"classes/RedisSdkError.html":{},"index.html":{}}}],["defination",{"_index":153,"title":{},"body":{"interfaces/RedisSdkErrorMap.html":{}}}],["defined",{"_index":119,"title":{},"body":{"interfaces/RedisSdkConfig.html":{}}}],["definition",{"_index":113,"title":{},"body":{"interfaces/RedisSdkConfig.html":{}}}],["del",{"_index":22,"title":{},"body":{"classes/RedisSdk.html":{}}}],["del(keys",{"_index":70,"title":{},"body":{"classes/RedisSdk.html":{}}}],["delbypattern",{"_index":23,"title":{},"body":{"classes/RedisSdk.html":{}}}],["delbypattern(pattern",{"_index":74,"title":{},"body":{"classes/RedisSdk.html":{}}}],["deletes",{"_index":71,"title":{},"body":{"classes/RedisSdk.html":{}}}],["dependencies",{"_index":169,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":6,"title":{},"body":{"classes/RedisSdk.html":{},"interfaces/RedisSdkConfig.html":{},"classes/RedisSdkError.html":{},"interfaces/RedisSdkErrorMap.html":{},"properties.html":{}}}],["disconnect",{"_index":24,"title":{},"body":{"classes/RedisSdk.html":{},"index.html":{}}}],["disconnect(forced",{"_index":77,"title":{},"body":{"classes/RedisSdk.html":{}}}],["distribute",{"_index":270,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":3,"title":{},"body":{"classes/RedisSdk.html":{},"interfaces/RedisSdkConfig.html":{},"classes/RedisSdkError.html":{},"interfaces/RedisSdkErrorMap.html":{},"coverage.html":{},"license.html":{}}}],["e",{"_index":138,"title":{},"body":{"classes/RedisSdkError.html":{}}}],["emap",{"_index":136,"title":{},"body":{"classes/RedisSdkError.html":{}}}],["environment",{"_index":185,"title":{},"body":{"index.html":{}}}],["error",{"_index":123,"title":{},"body":{"classes/RedisSdkError.html":{},"interfaces/RedisSdkErrorMap.html":{}}}],["error's",{"_index":147,"title":{},"body":{"classes/RedisSdkError.html":{}}}],["errorcode",{"_index":131,"title":{},"body":{"classes/RedisSdkError.html":{},"interfaces/RedisSdkErrorMap.html":{}}}],["establish",{"_index":55,"title":{},"body":{"classes/RedisSdk.html":{},"index.html":{}}}],["established",{"_index":54,"title":{},"body":{"classes/RedisSdk.html":{}}}],["event",{"_index":297,"title":{},"body":{"license.html":{}}}],["exist",{"_index":82,"title":{},"body":{"classes/RedisSdk.html":{}}}],["exists",{"_index":25,"title":{},"body":{"classes/RedisSdk.html":{}}}],["exists(keys",{"_index":80,"title":{},"body":{"classes/RedisSdk.html":{}}}],["expiry",{"_index":68,"title":{},"body":{"classes/RedisSdk.html":{}}}],["export",{"_index":196,"title":{},"body":{"index.html":{}}}],["express",{"_index":288,"title":{},"body":{"license.html":{}}}],["extends",{"_index":127,"title":{},"body":{"classes/RedisSdkError.html":{}}}],["false",{"_index":50,"title":{},"body":{"classes/RedisSdk.html":{}}}],["file",{"_index":4,"title":{},"body":{"classes/RedisSdk.html":{},"interfaces/RedisSdkConfig.html":{},"classes/RedisSdkError.html":{},"interfaces/RedisSdkErrorMap.html":{},"coverage.html":{}}}],["files",{"_index":259,"title":{},"body":{"license.html":{}}}],["fitness",{"_index":293,"title":{},"body":{"license.html":{}}}],["flag",{"_index":51,"title":{},"body":{"classes/RedisSdk.html":{},"classes/RedisSdkError.html":{}}}],["following",{"_index":181,"title":{},"body":{"index.html":{},"license.html":{}}}],["follows",{"_index":215,"title":{},"body":{"index.html":{}}}],["force",{"_index":238,"title":{},"body":{"index.html":{}}}],["forced",{"_index":79,"title":{},"body":{"classes/RedisSdk.html":{}}}],["free",{"_index":253,"title":{},"body":{"license.html":{}}}],["functionalities",{"_index":176,"title":{},"body":{"index.html":{}}}],["furnished",{"_index":277,"title":{},"body":{"license.html":{}}}],["gandhi",{"_index":241,"title":{},"body":{"index.html":{}}}],["get(key",{"_index":84,"title":{},"body":{"classes/RedisSdk.html":{}}}],["getandexpire",{"_index":26,"title":{},"body":{"classes/RedisSdk.html":{}}}],["getandexpire(key",{"_index":87,"title":{},"body":{"classes/RedisSdk.html":{}}}],["getclient",{"_index":27,"title":{},"body":{"classes/RedisSdk.html":{}}}],["gets",{"_index":85,"title":{},"body":{"classes/RedisSdk.html":{}}}],["getting",{"_index":171,"title":{"index.html":{},"license.html":{}},"body":{}}],["git@github.com:heliumtank92/am92",{"_index":324,"title":{},"body":{"properties.html":{}}}],["given",{"_index":75,"title":{},"body":{"classes/RedisSdk.html":{}}}],["granted",{"_index":252,"title":{},"body":{"license.html":{}}}],["helper",{"_index":182,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":251,"title":{},"body":{"license.html":{}}}],["holders",{"_index":299,"title":{},"body":{"license.html":{}}}],["homepage",{"_index":321,"title":{},"body":{"properties.html":{}}}],["host",{"_index":221,"title":{},"body":{"index.html":{}}}],["http",{"_index":150,"title":{},"body":{"classes/RedisSdkError.html":{},"interfaces/RedisSdkErrorMap.html":{}}}],["https://heliumtank92.github.io/am92",{"_index":322,"title":{},"body":{"properties.html":{}}}],["identifier",{"_index":159,"title":{},"body":{"coverage.html":{}}}],["identify",{"_index":144,"title":{},"body":{"classes/RedisSdkError.html":{}}}],["identifying",{"_index":52,"title":{},"body":{"classes/RedisSdk.html":{}}}],["implied",{"_index":289,"title":{},"body":{"license.html":{}}}],["import",{"_index":209,"title":{},"body":{"index.html":{}}}],["included",{"_index":283,"title":{},"body":{"license.html":{}}}],["including",{"_index":263,"title":{},"body":{"license.html":{}}}],["incrby",{"_index":28,"title":{},"body":{"classes/RedisSdk.html":{}}}],["incrby(key",{"_index":91,"title":{},"body":{"classes/RedisSdk.html":{}}}],["incrbyandexpire",{"_index":29,"title":{},"body":{"classes/RedisSdk.html":{}}}],["incrbyandexpire(key",{"_index":94,"title":{},"body":{"classes/RedisSdk.html":{}}}],["incremented",{"_index":93,"title":{},"body":{"classes/RedisSdk.html":{}}}],["increments",{"_index":92,"title":{},"body":{"classes/RedisSdk.html":{}}}],["index",{"_index":12,"title":{"index.html":{}},"body":{"classes/RedisSdk.html":{},"interfaces/RedisSdkConfig.html":{},"classes/RedisSdkError.html":{},"interfaces/RedisSdkErrorMap.html":{}}}],["install",{"_index":192,"title":{},"body":{"index.html":{}}}],["installation",{"_index":184,"title":{},"body":{"index.html":{}}}],["instance",{"_index":11,"title":{},"body":{"classes/RedisSdk.html":{},"interfaces/RedisSdkConfig.html":{},"classes/RedisSdkError.html":{},"interfaces/RedisSdkErrorMap.html":{},"index.html":{}}}],["instances",{"_index":230,"title":{},"body":{"index.html":{}}}],["interact",{"_index":177,"title":{},"body":{"index.html":{}}}],["interacts",{"_index":9,"title":{},"body":{"classes/RedisSdk.html":{}}}],["interface",{"_index":110,"title":{"interfaces/RedisSdkConfig.html":{},"interfaces/RedisSdkErrorMap.html":{}},"body":{"coverage.html":{}}}],["interfaces",{"_index":111,"title":{},"body":{"interfaces/RedisSdkConfig.html":{},"interfaces/RedisSdkErrorMap.html":{},"overview.html":{}}}],["javascript",{"_index":320,"title":{},"body":{"properties.html":{}}}],["js",{"_index":319,"title":{},"body":{"properties.html":{}}}],["key",{"_index":62,"title":{},"body":{"classes/RedisSdk.html":{}}}],["key_prefix",{"_index":116,"title":{},"body":{"interfaces/RedisSdkConfig.html":{},"index.html":{}}}],["keys",{"_index":30,"title":{},"body":{"classes/RedisSdk.html":{},"interfaces/RedisSdkConfig.html":{},"index.html":{}}}],["keys(pattern",{"_index":95,"title":{},"body":{"classes/RedisSdk.html":{}}}],["keywords",{"_index":316,"title":{},"body":{"properties.html":{}}}],["kind",{"_index":287,"title":{},"body":{"license.html":{}}}],["liability",{"_index":303,"title":{},"body":{"license.html":{}}}],["liable",{"_index":300,"title":{},"body":{"license.html":{}}}],["license",{"_index":190,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["limitation",{"_index":264,"title":{},"body":{"license.html":{}}}],["limited",{"_index":290,"title":{},"body":{"license.html":{}}}],["manage",{"_index":228,"title":{},"body":{"index.html":{}}}],["map",{"_index":154,"title":{},"body":{"interfaces/RedisSdkErrorMap.html":{}}}],["matching",{"_index":109,"title":{},"body":{"classes/RedisSdk.html":{},"interfaces/RedisSdkConfig.html":{},"classes/RedisSdkError.html":{},"interfaces/RedisSdkErrorMap.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["mehul",{"_index":242,"title":{},"body":{"index.html":{},"license.html":{}}}],["mentioned",{"_index":102,"title":{},"body":{"classes/RedisSdk.html":{}}}],["merchantability",{"_index":292,"title":{},"body":{"license.html":{}}}],["merge",{"_index":268,"title":{},"body":{"license.html":{}}}],["message",{"_index":132,"title":{},"body":{"classes/RedisSdkError.html":{},"interfaces/RedisSdkErrorMap.html":{}}}],["method",{"_index":103,"title":{},"body":{"classes/RedisSdk.html":{},"index.html":{}}}],["methods",{"_index":17,"title":{},"body":{"classes/RedisSdk.html":{},"index.html":{}}}],["mit",{"_index":244,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["modify",{"_index":267,"title":{},"body":{"license.html":{}}}],["module",{"_index":317,"title":{},"body":{"properties.html":{}}}],["modules",{"_index":312,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["name",{"_index":41,"title":{},"body":{"classes/RedisSdk.html":{},"classes/RedisSdkError.html":{}}}],["names",{"_index":73,"title":{},"body":{"classes/RedisSdk.html":{}}}],["need",{"_index":194,"title":{},"body":{"index.html":{}}}],["new",{"_index":166,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["node",{"_index":148,"title":{},"body":{"classes/RedisSdkError.html":{},"index.html":{},"properties.html":{}}}],["noninfringement",{"_index":296,"title":{},"body":{"license.html":{}}}],["note",{"_index":216,"title":{},"body":{"index.html":{}}}],["notice",{"_index":281,"title":{},"body":{"license.html":{}}}],["npm",{"_index":191,"title":{},"body":{"index.html":{}}}],["number",{"_index":60,"title":{},"body":{"classes/RedisSdk.html":{},"classes/RedisSdkError.html":{},"interfaces/RedisSdkErrorMap.html":{}}}],["object",{"_index":114,"title":{},"body":{"interfaces/RedisSdkConfig.html":{},"classes/RedisSdkError.html":{}}}],["obtaining",{"_index":256,"title":{},"body":{"license.html":{}}}],["optional",{"_index":43,"title":{},"body":{"classes/RedisSdk.html":{},"classes/RedisSdkError.html":{},"interfaces/RedisSdkErrorMap.html":{}}}],["options",{"_index":100,"title":{},"body":{"classes/RedisSdk.html":{}}}],["otherwise",{"_index":308,"title":{},"body":{"license.html":{}}}],["out",{"_index":310,"title":{},"body":{"license.html":{}}}],["overriding",{"_index":157,"title":{},"body":{"interfaces/RedisSdkErrorMap.html":{}}}],["overview",{"_index":313,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":104,"title":{"dependencies.html":{},"properties.html":{}},"body":{"classes/RedisSdk.html":{},"interfaces/RedisSdkConfig.html":{},"index.html":{}}}],["parameters",{"_index":39,"title":{},"body":{"classes/RedisSdk.html":{},"classes/RedisSdkError.html":{}}}],["particular",{"_index":294,"title":{},"body":{"license.html":{}}}],["pass",{"_index":213,"title":{},"body":{"index.html":{}}}],["passed",{"_index":155,"title":{},"body":{"interfaces/RedisSdkErrorMap.html":{}}}],["password",{"_index":225,"title":{},"body":{"index.html":{}}}],["pattern",{"_index":76,"title":{},"body":{"classes/RedisSdk.html":{}}}],["permission",{"_index":250,"title":{},"body":{"license.html":{}}}],["permit",{"_index":275,"title":{},"body":{"license.html":{}}}],["person",{"_index":255,"title":{},"body":{"license.html":{}}}],["persons",{"_index":276,"title":{},"body":{"license.html":{}}}],["port",{"_index":222,"title":{},"body":{"index.html":{}}}],["portions",{"_index":285,"title":{},"body":{"license.html":{}}}],["prefix",{"_index":120,"title":{},"body":{"interfaces/RedisSdkConfig.html":{}}}],["prefixes",{"_index":97,"title":{},"body":{"classes/RedisSdk.html":{}}}],["prefixkey",{"_index":31,"title":{},"body":{"classes/RedisSdk.html":{}}}],["prefixkey(key",{"_index":96,"title":{},"body":{"classes/RedisSdk.html":{}}}],["prepends",{"_index":207,"title":{},"body":{"index.html":{}}}],["project",{"_index":149,"title":{},"body":{"classes/RedisSdkError.html":{}}}],["promise",{"_index":57,"title":{},"body":{"classes/RedisSdk.html":{}}}],["properties",{"_index":13,"title":{"properties.html":{}},"body":{"classes/RedisSdk.html":{},"interfaces/RedisSdkConfig.html":{},"classes/RedisSdkError.html":{},"interfaces/RedisSdkErrorMap.html":{},"properties.html":{}}}],["provided",{"_index":231,"title":{},"body":{"index.html":{},"license.html":{}}}],["provides",{"_index":175,"title":{},"body":{"index.html":{}}}],["publish",{"_index":269,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":295,"title":{},"body":{"license.html":{}}}],["readonly",{"_index":128,"title":{},"body":{"classes/RedisSdkError.html":{}}}],["redis",{"_index":10,"title":{},"body":{"classes/RedisSdk.html":{},"interfaces/RedisSdkConfig.html":{},"dependencies.html":{},"index.html":{},"properties.html":{}}}],["redis.git",{"_index":325,"title":{},"body":{"properties.html":{}}}],["redis_auth'is",{"_index":206,"title":{},"body":{"index.html":{}}}],["redis_auth=note",{"_index":202,"title":{},"body":{"index.html":{}}}],["redis_auth_enabled",{"_index":205,"title":{},"body":{"index.html":{}}}],["redis_auth_enabled=false",{"_index":198,"title":{},"body":{"index.html":{}}}],["redis_enabled",{"_index":203,"title":{},"body":{"index.html":{}}}],["redis_enabled=false",{"_index":197,"title":{},"body":{"index.html":{}}}],["redis_host",{"_index":199,"title":{},"body":{"index.html":{}}}],["redis_key_prefix",{"_index":201,"title":{},"body":{"index.html":{}}}],["redis_port",{"_index":200,"title":{},"body":{"index.html":{}}}],["redisclient",{"_index":45,"title":{},"body":{"classes/RedisSdk.html":{}}}],["redisclientoptions",{"_index":117,"title":{},"body":{"interfaces/RedisSdkConfig.html":{}}}],["redissdk",{"_index":1,"title":{"classes/RedisSdk.html":{}},"body":{"classes/RedisSdk.html":{},"interfaces/RedisSdkConfig.html":{},"coverage.html":{},"index.html":{}}}],["redissdk(config",{"_index":226,"title":{},"body":{"index.html":{}}}],["redissdk.connect",{"_index":218,"title":{},"body":{"index.html":{}}}],["redissdk.disconnect",{"_index":237,"title":{},"body":{"index.html":{}}}],["redissdk.disconnect(true",{"_index":239,"title":{},"body":{"index.html":{}}}],["redissdkconfig",{"_index":37,"title":{"interfaces/RedisSdkConfig.html":{}},"body":{"classes/RedisSdk.html":{},"interfaces/RedisSdkConfig.html":{},"coverage.html":{}}}],["redissdkerror",{"_index":121,"title":{"classes/RedisSdkError.html":{}},"body":{"classes/RedisSdkError.html":{},"interfaces/RedisSdkErrorMap.html":{},"coverage.html":{}}}],["redissdkerrormap",{"_index":137,"title":{"interfaces/RedisSdkErrorMap.html":{}},"body":{"classes/RedisSdkError.html":{},"interfaces/RedisSdkErrorMap.html":{},"coverage.html":{}}}],["redissdkif",{"_index":211,"title":{},"body":{"index.html":{}}}],["redissdkto",{"_index":227,"title":{},"body":{"index.html":{}}}],["release",{"_index":236,"title":{},"body":{"index.html":{}}}],["releases",{"_index":78,"title":{},"body":{"classes/RedisSdk.html":{}}}],["repository",{"_index":323,"title":{},"body":{"properties.html":{}}}],["required",{"_index":204,"title":{},"body":{"index.html":{}}}],["resources",{"_index":189,"title":{},"body":{"index.html":{}}}],["restriction",{"_index":262,"title":{},"body":{"license.html":{}}}],["results",{"_index":108,"title":{},"body":{"classes/RedisSdk.html":{},"interfaces/RedisSdkConfig.html":{},"classes/RedisSdkError.html":{},"interfaces/RedisSdkErrorMap.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["returns",{"_index":56,"title":{},"body":{"classes/RedisSdk.html":{}}}],["rewrap",{"_index":140,"title":{},"body":{"classes/RedisSdkError.html":{}}}],["rights",{"_index":265,"title":{},"body":{"license.html":{}}}],["save",{"_index":193,"title":{},"body":{"index.html":{}}}],["sdk",{"_index":8,"title":{},"body":{"classes/RedisSdk.html":{},"index.html":{},"properties.html":{}}}],["seconds",{"_index":69,"title":{},"body":{"classes/RedisSdk.html":{}}}],["sell",{"_index":273,"title":{},"body":{"license.html":{}}}],["service",{"_index":133,"title":{},"body":{"classes/RedisSdkError.html":{}}}],["set",{"_index":32,"title":{},"body":{"classes/RedisSdk.html":{},"index.html":{}}}],["set(key",{"_index":99,"title":{},"body":{"classes/RedisSdk.html":{}}}],["setandexpire",{"_index":33,"title":{},"body":{"classes/RedisSdk.html":{}}}],["setandexpire(key",{"_index":105,"title":{},"body":{"classes/RedisSdk.html":{}}}],["setoptions",{"_index":101,"title":{},"body":{"classes/RedisSdk.html":{}}}],["sets",{"_index":67,"title":{},"body":{"classes/RedisSdk.html":{}}}],["shall",{"_index":282,"title":{},"body":{"license.html":{}}}],["shown",{"_index":233,"title":{},"body":{"index.html":{}}}],["socket",{"_index":220,"title":{},"body":{"index.html":{}}}],["software",{"_index":258,"title":{},"body":{"license.html":{}}}],["specified",{"_index":208,"title":{},"body":{"index.html":{}}}],["src/redissdk.ts",{"_index":5,"title":{},"body":{"classes/RedisSdk.html":{},"coverage.html":{}}}],["src/redissdkerror.ts",{"_index":122,"title":{},"body":{"classes/RedisSdkError.html":{},"coverage.html":{}}}],["src/types.ts",{"_index":112,"title":{},"body":{"interfaces/RedisSdkConfig.html":{},"interfaces/RedisSdkErrorMap.html":{},"coverage.html":{}}}],["started",{"_index":172,"title":{"index.html":{},"license.html":{}},"body":{}}],["statements",{"_index":160,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":151,"title":{},"body":{"classes/RedisSdkError.html":{},"interfaces/RedisSdkErrorMap.html":{}}}],["statuscode",{"_index":134,"title":{},"body":{"classes/RedisSdkError.html":{},"interfaces/RedisSdkErrorMap.html":{}}}],["stored",{"_index":86,"title":{},"body":{"classes/RedisSdk.html":{}}}],["string",{"_index":59,"title":{},"body":{"classes/RedisSdk.html":{},"interfaces/RedisSdkConfig.html":{},"classes/RedisSdkError.html":{},"interfaces/RedisSdkErrorMap.html":{}}}],["subject",{"_index":278,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":271,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":284,"title":{},"body":{"license.html":{}}}],["table",{"_index":168,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":167,"title":{},"body":{"coverage.html":{}}}],["team",{"_index":248,"title":{},"body":{"license.html":{}}}],["thrown",{"_index":125,"title":{},"body":{"classes/RedisSdkError.html":{}}}],["tls",{"_index":224,"title":{},"body":{"index.html":{}}}],["tort",{"_index":307,"title":{},"body":{"license.html":{}}}],["true",{"_index":143,"title":{},"body":{"classes/RedisSdkError.html":{},"index.html":{}}}],["ttlinsecs",{"_index":66,"title":{},"body":{"classes/RedisSdk.html":{}}}],["type",{"_index":42,"title":{},"body":{"classes/RedisSdk.html":{},"interfaces/RedisSdkConfig.html":{},"classes/RedisSdkError.html":{},"interfaces/RedisSdkErrorMap.html":{},"coverage.html":{}}}],["understanding",{"_index":142,"title":{},"body":{"classes/RedisSdkError.html":{}}}],["unknown",{"_index":88,"title":{},"body":{"classes/RedisSdk.html":{}}}],["unprefixes",{"_index":107,"title":{},"body":{"classes/RedisSdk.html":{}}}],["unprefixkey",{"_index":34,"title":{},"body":{"classes/RedisSdk.html":{}}}],["unprefixkey(key",{"_index":106,"title":{},"body":{"classes/RedisSdk.html":{}}}],["use",{"_index":266,"title":{},"body":{"license.html":{}}}],["used",{"_index":46,"title":{},"body":{"classes/RedisSdk.html":{}}}],["uses",{"_index":178,"title":{},"body":{"index.html":{}}}],["using",{"_index":90,"title":{},"body":{"classes/RedisSdk.html":{},"interfaces/RedisSdkConfig.html":{},"index.html":{}}}],["v4.x.x",{"_index":179,"title":{},"body":{"index.html":{}}}],["value",{"_index":49,"title":{},"body":{"classes/RedisSdk.html":{},"classes/RedisSdkError.html":{},"index.html":{}}}],["variables",{"_index":186,"title":{},"body":{"index.html":{}}}],["version",{"_index":180,"title":{},"body":{"index.html":{},"properties.html":{}}}],["warranties",{"_index":291,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":286,"title":{},"body":{"license.html":{}}}],["whether",{"_index":304,"title":{},"body":{"license.html":{}}}],["whose",{"_index":124,"title":{},"body":{"classes/RedisSdkError.html":{}}}],["wish",{"_index":212,"title":{},"body":{"index.html":{}}}],["without",{"_index":261,"title":{},"body":{"license.html":{}}}],["work",{"_index":195,"title":{},"body":{"index.html":{}}}],["wrap",{"_index":139,"title":{},"body":{"classes/RedisSdkError.html":{}}}],["wrapper",{"_index":174,"title":{},"body":{"index.html":{}}}],["xmlerror",{"_index":156,"title":{},"body":{"interfaces/RedisSdkErrorMap.html":{}}}],["yes",{"_index":44,"title":{},"body":{"classes/RedisSdk.html":{},"classes/RedisSdkError.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/RedisSdk.html":{"url":"classes/RedisSdk.html","title":"class - RedisSdk","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RedisSdk\n\n\n\n        \n            Documentation\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/RedisSdk.ts\n        \n\n\n            \n                Description\n            \n            \n                Class to create an SDK which interacts with a Redis Instance\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                client\n                            \n                            \n                                CONFIG\n                            \n                            \n                                connected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                connect\n                            \n                            \n                                    Async\n                                decrBy\n                            \n                            \n                                    Async\n                                decrByAndExpire\n                            \n                            \n                                    Async\n                                del\n                            \n                            \n                                    Async\n                                delByPattern\n                            \n                            \n                                    Async\n                                disconnect\n                            \n                            \n                                    Async\n                                exists\n                            \n                            \n                                    Async\n                                get\n                            \n                            \n                                    Async\n                                getAndExpire\n                            \n                            \n                                getClient\n                            \n                            \n                                    Async\n                                incrBy\n                            \n                            \n                                    Async\n                                incrByAndExpire\n                            \n                            \n                                    Async\n                                keys\n                            \n                            \n                                prefixKey\n                            \n                            \n                                    Async\n                                set\n                            \n                            \n                                    Async\n                                setAndExpire\n                            \n                            \n                                unprefixKey\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config?: RedisSdkConfig)\n                    \n                \n\n                \n                    \n                            Creates an instance of RedisSdk.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        RedisSdkConfig\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        client\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RedisClient\n\n                    \n                \n\n            \n                \n                    Redis Client used by the SDK\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RedisSdkConfig\n\n                    \n                \n\n            \n                \n                    Redis Config used by the SDK\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        connected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n\n            \n                \n                    Flag identifying if the connection has been established or not\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        connect\n                        \n                    \n                \n            \n            \n                \n                    \n                    connect()\n                \n            \n\n\n\n\n            \n                \n                    Establish a connection with the Redis Instance\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        decrBy\n                        \n                    \n                \n            \n            \n                \n                    \n                    decrBy(key: string, value: number)\n                \n            \n\n\n\n\n            \n                \n                    Decrements the value of a Redis key\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Redis key name\n\n                                    \n                                \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0\n                                    \n\n                                    \n                                        Redis value to be decremented by\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Decremented Redis value\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        decrByAndExpire\n                        \n                    \n                \n            \n            \n                \n                    \n                    decrByAndExpire(key: string, value: number, ttlInSecs: number)\n                \n            \n\n\n\n\n            \n                \n                    Decrements the value of a Redis key and sets the expiry of Redis key\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Redis key name\n\n                                    \n                                \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0\n                                    \n\n                                    \n                                        Redis value to be decremented by\n\n                                    \n                                \n                                \n                                    ttlInSecs\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Redis key expiry in seconds\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Decremented Redis value\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        del\n                        \n                    \n                \n            \n            \n                \n                    \n                    del(keys: string | string[])\n                \n            \n\n\n\n\n            \n                \n                    Deletes a Redis key or keys\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    keys\n                                    \n                                            string | string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Redis key name or Array of Redis key names\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delByPattern\n                        \n                    \n                \n            \n            \n                \n                    \n                    delByPattern(pattern: string)\n                \n            \n\n\n\n\n            \n                \n                    Deletes all Redis keys for a given key pattern\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    pattern\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Redis key pattern\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        disconnect\n                        \n                    \n                \n            \n            \n                \n                    \n                    disconnect(forced: boolean)\n                \n            \n\n\n\n\n            \n                \n                    Releases the connection with the Redis Instance if established\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    forced\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        exists\n                        \n                    \n                \n            \n            \n                \n                    \n                    exists(keys: string[])\n                \n            \n\n\n\n\n            \n                \n                    Checks if Redis keys exist or not\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    keys\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Array of Redis key names\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Returns '0' if key does not exist and '1' if exists\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        get\n                        \n                    \n                \n            \n            \n                \n                    \n                    get(key: string)\n                \n            \n\n\n\n\n            \n                \n                    Gets the value of a Redis key\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Redis key name\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Value stored in Redis\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAndExpire\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAndExpire(key: string, ttlInSecs: number)\n                \n            \n\n\n\n\n            \n                \n                    Gets the value of a Redis key and sets the expiry of Redis key\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Redis key name\n\n                                    \n                                \n                                \n                                    ttlInSecs\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Redis key expiry in seconds\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getClient\n                        \n                    \n                \n            \n            \n                \ngetClient()\n                \n            \n\n\n\n\n            \n                \n                    Returns the Redis client as configured using CONFIG\n\n\n                    \n                    \n                    \n                        Returns :     RedisClient\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        incrBy\n                        \n                    \n                \n            \n            \n                \n                    \n                    incrBy(key: string, value: number)\n                \n            \n\n\n\n\n            \n                \n                    Increments the value of a Redis key\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Redis key name\n\n                                    \n                                \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0\n                                    \n\n                                    \n                                        Redis value to be incremented by\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Incremented Redis value\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        incrByAndExpire\n                        \n                    \n                \n            \n            \n                \n                    \n                    incrByAndExpire(key: string, value: number, ttlInSecs: number)\n                \n            \n\n\n\n\n            \n                \n                    Increments the value of a Redis key and sets the expiry of Redis key\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Redis key name\n\n                                    \n                                \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0\n                                    \n\n                                    \n                                        Redis value to be incremented by\n\n                                    \n                                \n                                \n                                    ttlInSecs\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Redis key expiry in seconds\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Incremented Redis value\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        keys\n                        \n                    \n                \n            \n            \n                \n                    \n                    keys(pattern: string)\n                \n            \n\n\n\n\n            \n                \n                    Gets all Redis keys for a given key pattern\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    pattern\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Redis key pattern\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Array of Redis keys\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prefixKey\n                        \n                    \n                \n            \n            \n                \nprefixKey(key: string)\n                \n            \n\n\n\n\n            \n                \n                    Prefixes the Redis key with CONFIG.KEY_PREFIX\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        set\n                        \n                    \n                \n            \n            \n                \n                    \n                    set(key: string, value: string, options?: SetOptions)\n                \n            \n\n\n\n\n            \n                \n                    Sets the value for a Redis key\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Redis key name\n\n                                    \n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Value to be stored in Redis\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                            SetOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Options as mentioned by 'set' method of Redis package\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        setAndExpire\n                        \n                    \n                \n            \n            \n                \n                    \n                    setAndExpire(key: string, value: string, ttlInSecs: number, options?: SetOptions)\n                \n            \n\n\n\n\n            \n                \n                    Sets the value of a Redis key and sets the expiry of Redis key\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Redis key name\n\n                                    \n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Value to be stored in Redis\n\n                                    \n                                \n                                \n                                    ttlInSecs\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Redis key expiry in seconds\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                            SetOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Options as mentioned by 'set' method of Redis package\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unprefixKey\n                        \n                    \n                \n            \n            \n                \nunprefixKey(key: string)\n                \n            \n\n\n\n\n            \n                \n                    Unprefixes the Redis key with CONFIG.KEY_PREFIX\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RedisSdkConfig.html":{"url":"interfaces/RedisSdkConfig.html","title":"interface - RedisSdkConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RedisSdkConfig\n\n\n\n        \n            Documentation\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/TYPES.ts\n        \n\n\n            \n                Description\n            \n            \n                Type definition of config object for RedisSdk Class\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            CONNECTION_CONFIG\n                                        \n                                \n                                \n                                        \n                                            KEY_PREFIX\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        CONNECTION_CONFIG\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CONNECTION_CONFIG:     RedisClientOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RedisClientOptions\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Redis Connection Configuration as defined in 'redis' package\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        KEY_PREFIX\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        KEY_PREFIX:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    String to prefix all Redis keys when using the RedisSdk instance\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RedisSdkError.html":{"url":"classes/RedisSdkError.html","title":"class - RedisSdkError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RedisSdkError\n\n\n\n        \n            Documentation\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/RedisSdkError.ts\n        \n\n\n            \n                Description\n            \n            \n                Error class whose instance is thrown in case of any error.\n\n            \n\n            \n                Extends\n            \n            \n                    Error\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                _isCustomError\n                            \n                            \n                                    Readonly\n                                _isRedisSdkError\n                            \n                            \n                                    Optional\n                                error\n                            \n                            \n                                errorCode\n                            \n                            \n                                message\n                            \n                            \n                                    Readonly\n                                service\n                            \n                            \n                                statusCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(e?: any, eMap?: RedisSdkErrorMap)\n                    \n                \n\n                \n                    \n                            Creates an instance of RedisSdkError.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                Any Error instance to wrap with RedisSdkError.\n\n                                                        \n                                                \n                                                \n                                                        eMap\n                                                  \n                                                        \n                                                                        RedisSdkErrorMap\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                RedisSdkErrorMap to rewrap error for better understanding.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        _isCustomError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n\n            \n                \n                    Flag to identify if error is a custom error.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        _isRedisSdkError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n\n            \n                \n                    Flag to identify if error is a RedisSdkError.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n            \n                \n                    Error object.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n            \n                \n                    Error Code.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n            \n                \n                    Error's message string.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        service\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n            \n                \n                    Node project from which Error is thrown.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n            \n                \n                    HTTP status code associated with the error.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RedisSdkErrorMap.html":{"url":"interfaces/RedisSdkErrorMap.html","title":"interface - RedisSdkErrorMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RedisSdkErrorMap\n\n\n\n        \n            Documentation\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/TYPES.ts\n        \n\n\n            \n                Description\n            \n            \n                Type defination for error map to be passed to XmlError.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            errorCode\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            message\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            statusCode\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errorCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Overriding error code string for RedisSdkError instance\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Overriding message string for RedisSdkError instance\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        statusCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Overriding HTTP status code for RedisSdkError instance\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/RedisSdk.ts\n            \n            class\n            RedisSdk\n            \n                100 %\n                (22/22)\n            \n        \n        \n            \n                \n                src/RedisSdkError.ts\n            \n            class\n            RedisSdkError\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/TYPES.ts\n            \n            interface\n            RedisSdkConfig\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/TYPES.ts\n            \n            interface\n            RedisSdkErrorMap\n            \n                100 %\n                (4/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            redis : ^4.6.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n@am92/redis\n \n \n \n \n\n\n\n\nThis is an SDK Wrapper which provides Redis functionalities to interact with a Redis Instance. This package uses Node-Redis package using its v4.x.x version.\nThis package provides the following functionalities:\n\nRedis Connection Helper\nRedis SDK Class\n\n\n\nTable of Content\n\nInstallation\nEnvironment Variables\nCreating a Redis SDK Instance\nContributors\nResources\nLicense\n\n\n\nInstallation\n$ npm install --save @am92/redis\n\nEnvironment Variables\nThe following environment variables need to be set to work with this package:\n##### Redis Config\nexport REDIS_ENABLED=false\nexport REDIS_AUTH_ENABLED=false\nexport REDIS_HOST=\nexport REDIS_PORT=\nexport REDIS_KEY_PREFIX=\nexport REDIS_AUTH=Note:\n\nIf 'REDIS_ENABLED' is set to 'true', 'REDIS_HOST' and 'REDIS_PORT' are required\nIf 'REDIS_AUTH_ENABLED' is set to 'true', 'REDIS_AUTH'is required\n'REDIS_KEY_PREFIX' prepends all redis keys with the specified value\n\n\n\nCreating a Redis SDK Instance\nimport { RedisSdk } from '@am92/redis'\n\nconst redisSdk = new RedisSdk()\nexport default redisSdkIf you wish to pass your custom 'config' for the RedisSdk, then you can build it as follows:\nNote: You will have to call the redisSdk.connect() to establish a connection before using the RedisSdk Methods\nimport { RedisSdk } from '@am92/redis'\n\nconst config = {\n  CONNECTION_CONFIG: {\n    socket: {\n      host: '',\n      port: 6379,\n      tls: true\n    },\n    password: ''\n  }\n  KEY_PREFIX: ''\n}\n\nconst redisSdk = new RedisSdk(config)\nexport default redisSdkTo manage redis connections for RedisSdk Instances, 'connect' and 'disconnect' methods are provided and they can be called as shown below. The 'connect' method must be called before before using the RedisSdk Methods.\n// To establish a connection\nawait redisSdk.connect()\n\n// To release the connection\nawait redisSdk.disconnect()\n\n// To force release the connection\nawait redisSdk.disconnect(true)\n\nContributors\n\n  \n    \n      \n        \n          \n          \n          Ankit Gandhi\n        \n      \n      \n        \n          \n          \n          Mehul Agarwal\n        \n      \n    \n  \n\n\n\n\nResources\n\nNode-Redis\n\n\n\nLicense\n\nMIT\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2022 Ankit Mehul Team Account\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 2.0.2\n        \n            Description : Redis SDK\n        \n            Keywords : redis, node, module, cache, js, javascript, node-redis\n        \n            Homepage : https://heliumtank92.github.io/am92-redis\n        \n            License : MIT\n        \n            Repository : git@github.com:heliumtank92/am92-redis.git\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
